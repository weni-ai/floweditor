// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Flow Fetch > should fetch flow activity and details 1`] = `
[
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;

exports[`Flow Fetch > should fetch flow activity and details 2`] = `
[
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;

exports[`Flow Fetch > should fetch flow activity and details 3`] = `
[
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;

exports[`Flow Fetch > should fetch flow activity and details 4`] = `
[
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [],
          "nodes": {
            "node0": {
              "position": {
                "bottom": 254,
                "left": 0,
                "right": 220,
                "top": 10,
              },
            },
            "node1": {
              "position": {
                "bottom": 370,
                "left": 0,
                "right": 220,
                "top": 280,
              },
              "type": "wait_for_response",
            },
            "node2": {
              "position": {
                "bottom": 498,
                "left": 0,
                "right": 220,
                "top": 400,
              },
            },
            "node3": {
              "position": {
                "bottom": 598,
                "left": 0,
                "right": 220,
                "top": 520,
              },
            },
          },
          "stickies": {
            "sticky0": {
              "body": "The body for sticky0",
              "position": {
                "left": 100,
                "top": 100,
              },
              "title": "sticky0",
            },
          },
        },
        "language": "eng",
        "localization": {},
        "name": "Boring Flow",
        "nodes": [
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
        ],
        "revision": 113,
        "spec_version": "13.1",
        "uuid": "boring",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "metadata": {},
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {
            "202": {
              "created_on": "2019-02-11T21:34:49.224697Z",
              "id": 202,
              "revision": 113,
              "user": {
                "email": "org1.admin@nyaruka.com",
                "name": "",
              },
              "version": "11.10",
            },
          },
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": 113,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": false,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;

exports[`Flow Fetch > should fetch flow activity and details 5`] = `
[
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [],
          "nodes": {
            "node0": {
              "position": {
                "bottom": 254,
                "left": 0,
                "right": 220,
                "top": 10,
              },
            },
            "node1": {
              "position": {
                "bottom": 370,
                "left": 0,
                "right": 220,
                "top": 280,
              },
              "type": "wait_for_response",
            },
            "node2": {
              "position": {
                "bottom": 498,
                "left": 0,
                "right": 220,
                "top": 400,
              },
            },
            "node3": {
              "position": {
                "bottom": 598,
                "left": 0,
                "right": 220,
                "top": 520,
              },
            },
          },
          "stickies": {
            "sticky0": {
              "body": "The body for sticky0",
              "position": {
                "left": 100,
                "top": 100,
              },
              "title": "sticky0",
            },
          },
        },
        "language": "eng",
        "localization": {},
        "name": "Boring Flow",
        "nodes": [
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
        ],
        "revision": 113,
        "spec_version": "13.1",
        "uuid": "boring",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "metadata": {},
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {
            "202": {
              "created_on": "2019-02-11T21:34:49.224697Z",
              "id": 202,
              "revision": 113,
              "user": {
                "email": "org1.admin@nyaruka.com",
                "name": "",
              },
              "version": "11.10",
            },
          },
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": 113,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": false,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5200,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "brainInfo": {
        "name": "DÃ³ris",
        "occupation": "Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing Analista de Marketing",
      },
    },
    "type": "UPDATE_BRAIN_INFO",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": true,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "baseLanguage": {
        "id": "base",
        "name": "Default",
        "type": "language",
      },
    },
    "type": "UPDATE_BASE_LANGUAGE",
  },
  {
    "payload": {
      "metadata": {
        "issues": [],
      },
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [
            {
              "eng": "English",
            },
            {
              "spa": "Spanish",
            },
          ],
          "nodes": {},
          "stickies": {
            "24afc61e-e528-4ac0-b887-78cebd39f12b": {
              "position": {
                "left": 0,
                "top": 0,
              },
              "text": "This is a sticky note",
            },
          },
        },
        "language": "eng",
        "localization": {
          "spa": {
            "360a28a1-6741-4f16-9421-f6f313cf753e": {
              "text": [
                "Hola, como te llamas?",
              ],
            },
          },
        },
        "name": "Customer Service",
        "nodes": [
          {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
        ],
        "spec_version": "13.1",
        "uuid": "9ecc8e84-6b83-442b-a04a-8094d5de997b",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "nodes": {
        "24afc61e-e528-4ac0-b887-78cebd39f12b": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "Hi there, what is your name?",
                "type": "send_msg",
                "uuid": "360a28a1-6741-4f16-9421-f6f313cf753e",
              },
              {
                "groups": [
                  {
                    "name": "Unsatisfied Customers",
                    "uuid": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
                  },
                  {
                    "name": "Unknown Group",
                    "uuid": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
                  },
                ],
                "type": "add_contact_groups",
                "uuid": "d5293394-c6d4-407c-97da-8149faea24cf",
              },
            ],
            "exits": [
              {
                "destination_uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                "name": null,
                "uuid": "445fc64c-2a18-47cc-89d0-15172826bfcc",
              },
            ],
            "uuid": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
          },
        },
        "471f6f94-c683-48f9-8e27-ece1d7604315": {
          "inboundConnections": {
            "b319dff7-cdb6-4ce4-9f48-5e72818bae77": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "node": {
            "actions": [
              {
                "body": "{
  "contact": @(json(contact.uuid)),
  "contact_urn": @(json(contact.urns)),
  "message": @(json(run.input.text)),
  "flow": @(json(run.flow.uuid)),
  "flow_name": @(json(run.flow.name))
}",
                "headers": {},
                "method": "POST",
                "type": "call_webhook",
                "url": "http://google.com",
                "uuid": "b29914f6-94f4-44ab-be48-55a51a76afdf",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": "Success",
                "uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              },
              {
                "destination_uuid": null,
                "name": "Failure",
                "uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
              },
              {
                "destination_uuid": null,
                "name": "Unreachable",
                "uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "success",
                  ],
                  "exit_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
                  "type": "has_only_text",
                  "uuid": "379eed12-fe01-44b4-85c5-a1f2816e3557",
                },
                {
                  "arguments": [
                    "response_error",
                  ],
                  "exit_uuid": "c1432a6b-0fe4-435f-915a-15d55e269147",
                  "type": "has_only_text",
                  "uuid": "65fed15d-c6ad-4e5b-9a2f-80a0a58170e7",
                },
                {
                  "arguments": [
                    "connection_error",
                  ],
                  "exit_uuid": "f5142861-4a29-42b0-a7ab-00613b56de32",
                  "type": "has_only_text",
                  "uuid": "bd7fb782-b202-4551-a6da-e85117e1d188",
                },
              ],
              "default_category_uuid": "f783f0b5-1d08-4981-9547-bae6d35e84c2",
              "operand": "@run.webhook.status",
              "type": "switch",
            },
            "uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 700,
            },
            "type": "webhook",
          },
        },
        "7a19060d-6d93-4217-a4e5-9cbd479be051": {
          "inboundConnections": {
            "984fefee-3bf3-4e7b-bf84-e6e650253b2b": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "node": {
            "actions": [
              {
                "property": "name",
                "type": "set_contact_property",
                "uuid": "505e8da9-0b73-4cf4-84a7-ce2a58d70f3e",
                "value": "@run.results.name",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "f267fe2d-3100-4a3e-aa41-2dc6b3db3eaa",
                "value": "Some Value",
              },
              {
                "text": "Thanks @run.results.name, what can we help you with?",
                "type": "send_msg",
                "uuid": "21541123-ab0f-4c2f-9835-5c97e9be133f",
              },
            ],
            "exits": [
              {
                "destination_uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                "name": null,
                "uuid": "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0",
              },
            ],
            "uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 260,
            },
          },
        },
        "a8a09d00-7cab-4375-9d44-58f6783732f6": {
          "inboundConnections": {
            "28adcb5e-8208-4e35-82c3-f377cbba5a7c": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "node": {
            "actions": [
              {
                "category": "",
                "name": "Phone",
                "type": "set_run_result",
                "uuid": "9c10156e-aec0-45a3-a144-da84e87222c2",
                "value": "@contact.urns.tel",
              },
              {
                "addresses": [
                  "support@acme.co",
                ],
                "body": "@run.results.name says: 

@run.results.issue 

Please reach out to them at @run.results.phone",
                "subject": "New Issue",
                "type": "send_email",
                "uuid": "225a67f4-28b5-4819-a25b-eb9a0ecea11d",
              },
              {
                "text": "Thanks! We'll be in touch shortly ð",
                "type": "send_msg",
                "uuid": "71c026a5-7c1c-4e79-8421-21b8c3689510",
              },
            ],
            "exits": [
              {
                "destination_uuid": "471f6f94-c683-48f9-8e27-ece1d7604315",
                "name": null,
                "uuid": "b319dff7-cdb6-4ce4-9f48-5e72818bae77",
              },
            ],
            "uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 540,
            },
          },
        },
        "d642b014-3c91-418f-ad5b-0fb4f8c5ee60": {
          "inboundConnections": {
            "445fc64c-2a18-47cc-89d0-15172826bfcc": "24afc61e-e528-4ac0-b887-78cebd39f12b",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "7a19060d-6d93-4217-a4e5-9cbd479be051",
                "name": "All Responses",
                "uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "984fefee-3bf3-4e7b-bf84-e6e650253b2b",
              "operand": "@run.input",
              "result_name": "Name",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 180,
            },
            "type": "wait_for_response",
          },
        },
        "fc349688-3589-42ac-b61c-d5ef54cedaa5": {
          "inboundConnections": {
            "890ec71a-edaa-47a0-90ac-09f6f8d0d5b0": "7a19060d-6d93-4217-a4e5-9cbd479be051",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                "name": "All Responses",
                "uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              },
            ],
            "router": {
              "cases": [],
              "default_category_uuid": "28adcb5e-8208-4e35-82c3-f377cbba5a7c",
              "operand": "@run.input",
              "result_name": "This can be something that is really long",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
          },
          "ui": {
            "position": {
              "left": 300,
              "top": 440,
            },
            "type": "wait_for_response",
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {},
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": {
          "id": "base",
          "name": "Default",
          "type": "language",
        },
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": undefined,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": true,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [],
          "nodes": {
            "node0": {
              "position": {
                "bottom": 254,
                "left": 0,
                "right": 220,
                "top": 10,
              },
            },
            "node1": {
              "position": {
                "bottom": 370,
                "left": 0,
                "right": 220,
                "top": 280,
              },
              "type": "wait_for_response",
            },
            "node2": {
              "position": {
                "bottom": 498,
                "left": 0,
                "right": 220,
                "top": 400,
              },
            },
            "node3": {
              "position": {
                "bottom": 598,
                "left": 0,
                "right": 220,
                "top": 520,
              },
            },
          },
          "stickies": {
            "sticky0": {
              "body": "The body for sticky0",
              "position": {
                "left": 100,
                "top": 100,
              },
              "title": "sticky0",
            },
          },
        },
        "language": "eng",
        "localization": {},
        "name": "Boring Flow",
        "nodes": [
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
        ],
        "revision": 113,
        "spec_version": "13.1",
        "uuid": "boring",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
  {
    "payload": {
      "issues": {},
    },
    "type": "UPDATE_ISSUES",
  },
  {
    "payload": {
      "metadata": {},
    },
    "type": "UPDATE_METADATA",
  },
  {
    "payload": {
      "assets": {
        "channels": {
          "items": {},
          "type": "channel",
        },
        "completion": {
          "items": {
            "context": {
              "root": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os resultados da execuÃ§Ã£o atual",
                  "key": "results",
                  "type": "results",
                },
                {
                  "help": "a entrada atual do contato",
                  "key": "input",
                  "type": "input",
                },
                {
                  "help": "a execuÃ§Ã£o atual",
                  "key": "run",
                  "type": "run",
                },
                {
                  "help": "a Ãºltima execuÃ§Ã£o do filho",
                  "key": "child",
                  "type": "related_run",
                },
                {
                  "help": "o pai da exeuÃ§Ã£o",
                  "key": "parent",
                  "type": "related_run",
                },
                {
                  "help": "the last opened ticket for the contact",
                  "key": "ticket",
                  "type": "ticket",
                },
                {
                  "help": "a resposta JSON avaliada da Ãºltima chamada webhook",
                  "key": "webhook",
                  "type": "any",
                },
                {
                  "help": "o nÃ³ atual",
                  "key": "node",
                  "type": "node",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
                {
                  "help": "o gatilho que iniciou a sessÃ£o",
                  "key": "trigger",
                  "type": "trigger",
                },
                {
                  "help": "o resumo atual que continuou esta sessÃ£o",
                  "key": "resume",
                  "type": "resume",
                },
              ],
              "root_no_session": [
                {
                  "help": "o contato",
                  "key": "contact",
                  "type": "contact",
                },
                {
                  "help": "os valores customizados do contato",
                  "key": "fields",
                  "type": "fields",
                },
                {
                  "help": "os valores de URN do contato",
                  "key": "urns",
                  "type": "urns",
                },
                {
                  "help": "os valores globais",
                  "key": "globals",
                  "type": "globals",
                },
              ],
              "types": [
                {
                  "key_source": "fields",
                  "name": "fields",
                  "property_template": {
                    "help": "{key} para o contato",
                    "key": "{key}",
                    "type": "any",
                  },
                },
                {
                  "key_source": "results",
                  "name": "results",
                  "property_template": {
                    "help": "o resultado para {key}",
                    "key": "{key}",
                    "type": "result",
                  },
                },
                {
                  "key_source": "globals",
                  "name": "globals",
                  "property_template": {
                    "help": "o valor global {key}",
                    "key": "{key}",
                    "type": "text",
                  },
                },
                {
                  "name": "urns",
                  "properties": [
                    {
                      "help": "Discord URN para o contato",
                      "key": "discord",
                      "type": "text",
                    },
                    {
                      "help": "Ext URN para o contato",
                      "key": "ext",
                      "type": "text",
                    },
                    {
                      "help": "Facebook URN para o contato",
                      "key": "facebook",
                      "type": "text",
                    },
                    {
                      "help": "Fcm URN para o contato",
                      "key": "fcm",
                      "type": "text",
                    },
                    {
                      "help": "Freshchat URN para o contato",
                      "key": "freshchat",
                      "type": "text",
                    },
                    {
                      "help": "Instagram URN para o contato",
                      "key": "instagram",
                      "type": "text",
                    },
                    {
                      "help": "Jiochat URN para o contato",
                      "key": "jiochat",
                      "type": "text",
                    },
                    {
                      "help": "Line URN para o contato",
                      "key": "line",
                      "type": "text",
                    },
                    {
                      "help": "Mailto URN para o contato",
                      "key": "mailto",
                      "type": "text",
                    },
                    {
                      "help": "Rocketchat URN para o contato",
                      "key": "rocketchat",
                      "type": "text",
                    },
                    {
                      "help": "Slack URN para o contato",
                      "key": "slack",
                      "type": "text",
                    },
                    {
                      "help": "Teams URN para o contato",
                      "key": "teams",
                      "type": "text",
                    },
                    {
                      "help": "Tel URN para o contato",
                      "key": "tel",
                      "type": "text",
                    },
                    {
                      "help": "Telegram URN para o contato",
                      "key": "telegram",
                      "type": "text",
                    },
                    {
                      "help": "Twitter URN para o contato",
                      "key": "twitter",
                      "type": "text",
                    },
                    {
                      "help": "Twitterid URN para o contato",
                      "key": "twitterid",
                      "type": "text",
                    },
                    {
                      "help": "Viber URN para o contato",
                      "key": "viber",
                      "type": "text",
                    },
                    {
                      "help": "Vk URN para o contato",
                      "key": "vk",
                      "type": "text",
                    },
                    {
                      "help": "Webchat URN para o contato",
                      "key": "webchat",
                      "type": "text",
                    },
                    {
                      "help": "Wechat URN para o contato",
                      "key": "wechat",
                      "type": "text",
                    },
                    {
                      "help": "WhatsApp URN para o contato",
                      "key": "whatsapp",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "channel",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do canal",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do canal",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o endereÃ§o do canal",
                      "key": "address",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "contact",
                  "properties": [
                    {
                      "help": "o nome da URN",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do contato",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o ID numÃ©rico do contato",
                      "key": "id",
                      "type": "text",
                    },
                    {
                      "help": "o primeiro nome do contato",
                      "key": "first_name",
                      "type": "text",
                    },
                    {
                      "help": "o nome do contato",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "a lÃ­ngua do contato como cÃ³digo ISO de 3 letras",
                      "key": "language",
                      "type": "text",
                    },
                    {
                      "help": "the status of the contact",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o do contato",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a Ãºltima data vista do contato",
                      "key": "last_seen_on",
                      "type": "any",
                    },
                    {
                      "array": true,
                      "help": "as URNs pertencentes ao contato",
                      "key": "urns",
                      "type": "text",
                    },
                    {
                      "help": "a URN preferida do contato",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "os grupos ao qual o contato pertence",
                      "key": "groups",
                      "type": "group",
                    },
                    {
                      "help": "os valores customizados do contato",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "o canal preferido do contato",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "array": true,
                      "help": "the open tickets of the contact",
                      "key": "tickets",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "flow",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID do fluxo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do fluxo",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o nÃºmero de revisÃ£o do fluxo",
                      "key": "revision",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "group",
                  "properties": [
                    {
                      "help": "o UUID do grupo",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o nome do grupo",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "input",
                  "properties": [
                    {
                      "help": "o texto e anexos",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da entrada",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de criaÃ§Ã£o da entrada",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "o canal onde a entrada foi recebida",
                      "key": "channel",
                      "type": "channel",
                    },
                    {
                      "help": "a URN do contato que a entrada foi recebida",
                      "key": "urn",
                      "type": "text",
                    },
                    {
                      "help": "a parte de texto da entrada",
                      "key": "text",
                      "type": "text",
                    },
                    {
                      "array": true,
                      "help": "quaisquer anexos na entrada",
                      "key": "attachments",
                      "type": "text",
                    },
                    {
                      "help": "o ID externo da entrada",
                      "key": "external_id",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "node",
                  "properties": [
                    {
                      "help": "o UUID do nÃ³",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contador de visitas para o nÃ³ nesta execuÃ§Ã£o",
                      "key": "visit_count",
                      "type": "number",
                    },
                  ],
                },
                {
                  "name": "related_run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "os valores customizados da execuÃ§Ã£o",
                      "key": "fields",
                      "type": "fields",
                    },
                    {
                      "help": "os valores de URN da execuÃ§Ã£o",
                      "key": "urns",
                      "type": "urns",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "any",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "result",
                  "properties": [
                    {
                      "help": "o valor",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o nome do resultado",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "o valor do resultado",
                      "key": "value",
                      "type": "text",
                    },
                    {
                      "help": "a categoria do resultado",
                      "key": "category",
                      "type": "text",
                    },
                    {
                      "help": "a categoria localizada do resultado",
                      "key": "category_localized",
                      "type": "text",
                    },
                    {
                      "help": "a entrada do resultado",
                      "key": "input",
                      "type": "text",
                    },
                    {
                      "help": "os dados extras do resultado como resposta de webhook",
                      "key": "extra",
                      "type": "any",
                    },
                    {
                      "help": "o UUID do nÃ³ no fluxo que gerou o resultado",
                      "key": "node_uuid",
                      "type": "text",
                    },
                    {
                      "help": "a data de ciraÃ§Ã£o do resultado",
                      "key": "created_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "resume",
                  "properties": [
                    {
                      "help": "o tipo de resumo que resumiu esta sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "run",
                  "properties": [
                    {
                      "help": "o nome do contato e UUID do fluxo",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "o UUID da execuÃ§Ã£o",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "o contato da exeuÃ§Ã£o",
                      "key": "contact",
                      "type": "contact",
                    },
                    {
                      "help": "o fluxo da execuÃ§Ã£o",
                      "key": "flow",
                      "type": "flow",
                    },
                    {
                      "help": "o status da atual execuÃ§Ã£o",
                      "key": "status",
                      "type": "text",
                    },
                    {
                      "help": "os resultados salvos pela execuÃ§Ã£o",
                      "key": "results",
                      "type": "results",
                    },
                    {
                      "help": " data de criaÃ§Ã£o da execuÃ§Ã£o",
                      "key": "created_on",
                      "type": "datetime",
                    },
                    {
                      "help": "a data de saÃ­da da execuÃ§Ã£o",
                      "key": "exited_on",
                      "type": "datetime",
                    },
                  ],
                },
                {
                  "name": "ticket",
                  "properties": [
                    {
                      "help": "the UUID of the ticket",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the subject of the ticket",
                      "key": "subject",
                      "type": "text",
                    },
                    {
                      "help": "the body of the ticket",
                      "key": "body",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "topic",
                  "properties": [
                    {
                      "help": "o nome",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the UUID of the topic",
                      "key": "uuid",
                      "type": "text",
                    },
                    {
                      "help": "the name of the topic",
                      "key": "name",
                      "type": "text",
                    },
                  ],
                },
                {
                  "name": "trigger",
                  "properties": [
                    {
                      "help": "o tipo do gatilho que iniciou a sessÃ£o",
                      "key": "type",
                      "type": "text",
                    },
                    {
                      "help": "os parÃ¢metros passados para o gatilho",
                      "key": "params",
                      "type": "any",
                    },
                    {
                      "help": "a palavra para combinar se uma uma palavra de gatilho",
                      "key": "keyword",
                      "type": "text",
                    },
                    {
                      "help": "o usuÃ¡rio que iniciou a sessÃ£o se for um gatilho manual",
                      "key": "user",
                      "type": "user",
                    },
                    {
                      "help": "a origem desta sessÃ£o se for um gatilho manual",
                      "key": "origin",
                      "type": "text",
                    },
                    {
                      "help": "the ticket if this is a ticket trigger",
                      "key": "ticket",
                      "type": "ticket",
                    },
                  ],
                },
                {
                  "name": "user",
                  "properties": [
                    {
                      "help": "the name or email",
                      "key": "__default__",
                      "type": "text",
                    },
                    {
                      "help": "the email address of the user",
                      "key": "email",
                      "type": "text",
                    },
                    {
                      "help": "the name of the user",
                      "key": "name",
                      "type": "text",
                    },
                    {
                      "help": "the first name of the user",
                      "key": "first_name",
                      "type": "text",
                    },
                  ],
                },
              ],
            },
            "functions": [
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(abs(-10))",
                  },
                  {
                    "output": "10.5",
                    "template": "@(abs(10.5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(abs("foo"))",
                  },
                ],
                "signature": "abs(number)",
                "summary": "Retorna o valor absoluto de \`number\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(and(true))",
                  },
                  {
                    "output": "false",
                    "template": "@(and(true, false, true))",
                  },
                ],
                "signature": "and(values...)",
                "summary": "Retorna se todos os \`values\` dados sÃ£o verdadeiros.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(array("a", "b", 356)[1])",
                  },
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "2",
                    "template": "@(count(array("a", "b")))",
                  },
                ],
                "signature": "array(values...)",
                "summary": " Toma multiplos \`values\` e retorna todos em uma matriz.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{content_type: image/jpeg, url: https://example.com/test.jpg}",
                    "template": "@(attachment_parts("image/jpeg:https://example.com/test.jpg"))",
                  },
                ],
                "signature": "attachment_parts(attachment)",
                "summary": "Analisa um anexo em suas diferentes partes",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(boolean(array(1, 2)))",
                  },
                  {
                    "output": "false",
                    "template": "@(boolean("FALSE"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(boolean(1 / 0))",
                  },
                ],
                "signature": "boolean(value)",
                "summary": "Tenta converter \`value\` em um boleano.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:code]",
                "examples": [
                  {
                    "output": "!",
                    "template": "@(char(33))",
                  },
                  {
                    "output": "ð",
                    "template": "@(char(128512))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(char("foo"))",
                  },
                ],
                "signature": "char(code)",
                "summary": "Retorna o caractere para o \`code\` UNICODE dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ð Hello world",
                    "template": "@(clean("ð Hello \\nwo\\tr\\rld"))",
                  },
                  {
                    "output": "123",
                    "template": "@(clean(123))",
                  },
                ],
                "signature": "clean(text)",
                "summary": "Remove quaisquer caracteres nÃ£o imprimÃ­veis do \`text\`.",
              },
              {
                "detail": "Isso Ã© o inverso de [function:char]",
                "examples": [
                  {
                    "output": "97",
                    "template": "@(code("a"))",
                  },
                  {
                    "output": "97",
                    "template": "@(code("abc"))",
                  },
                  {
                    "output": "128512",
                    "template": "@(code("ð"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code("15"))",
                  },
                  {
                    "output": "49",
                    "template": "@(code(15))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(code(""))",
                  },
                ],
                "signature": "code(text)",
                "summary": "Retorna o cÃ³digo UNICODE do primeiro caractere de \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(concat(array("a", "b"), array("c", "d")))",
                  },
                  {
                    "output": "[1, 2, 3, 4]",
                    "template": "@(unique(concat(array(1, 2, 3), array(3, 4))))",
                  },
                ],
                "signature": "concat(array1, array2)",
                "summary": "Returns the result of concatenating two arrays.",
              },
              {
                "detail": "Isso retornarÃ¡ um erro se for passado um item que nÃ£o Ã© contabilizÃ¡vel.",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(count(contact.fields))",
                  },
                  {
                    "output": "0",
                    "template": "@(count(array()))",
                  },
                  {
                    "output": "3",
                    "template": "@(count(array("a", "b", "c")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(count(1234))",
                  },
                ],
                "signature": "count(value)",
                "summary": "Retorna o nÃºmero de items em uma matriz ou propriedades em um objeto.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(date("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10",
                    "template": "@(date("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date("NOT DATE"))",
                  },
                ],
                "signature": "date(value)",
                "summary": "Tenta converter \`value\` em uma data.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-01-15",
                    "template": "@(date_from_parts(2017, 1, 15))",
                  },
                  {
                    "output": "2017-03-03",
                    "template": "@(date_from_parts(2017, 2, 31))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(date_from_parts(2017, 13, 15))",
                  },
                ],
                "signature": "date_from_parts(year, month, day)",
                "summary": "Cria uma data a partir de um \`year\`, \`month\` e \`day\`.",
              },
              {
                "detail": "Se for texto, entÃ£o isso serÃ¡ analisado para uma data/hora utilizando o formato padrÃ£o
e formatos de tempo. Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(datetime("1979-07-18"))",
                  },
                  {
                    "output": "1979-07-18T10:30:45.123456Z",
                    "template": "@(datetime("1979-07-18T10:30:45.123456Z"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(datetime("10/05/2010"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(datetime("NOT DATE"))",
                  },
                ],
                "signature": "datetime(value)",
                "summary": "Tenta converter \`value\` em uma datetime.",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos",
                "examples": [
                  {
                    "output": "2017-01-20T00:00:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15", 5, "D"))",
                  },
                  {
                    "output": "2017-01-15T11:15:00.000000-05:00",
                    "template": "@(datetime_add("2017-01-15 10:45", 30, "m"))",
                  },
                ],
                "signature": "datetime_add(datetime, offset, unit)",
                "summary": "Calcula o valor da data de entrada adicionada por \`offset\`, de numero de \`unit\` para \`datetime\`",
              },
              {
                "detail": "DuraÃ§Ãµes vÃ¡lidas sÃ£o "Y" para anos, "M" para meses, "W" para semanas, "D" para dias, "h" para hora,
"m" para minutos, "s" para segundos.",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(datetime_diff("2017-01-15", "2017-01-17", "D"))",
                  },
                  {
                    "output": "17",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "W"))",
                  },
                  {
                    "output": "4",
                    "template": "@(datetime_diff("2017-01-15", "2017-05-15", "M"))",
                  },
                  {
                    "output": "1",
                    "template": "@(datetime_diff("2017-01-17 10:50", "2017-01-17 12:30", "h"))",
                  },
                  {
                    "output": "-2",
                    "template": "@(datetime_diff("2017-01-17", "2015-12-17", "Y"))",
                  },
                ],
                "signature": "datetime_diff(date1, date2, unit)",
                "summary": "Retorna a duraÃ§Ã£o entre \`date1\` e \`date2\` na \`unit\` especificada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2017-06-12T11:56:59.000000-05:00",
                    "template": "@(datetime_from_epoch(1497286619))",
                  },
                  {
                    "output": "2017-06-12T11:56:59.123456-05:00",
                    "template": "@(datetime_from_epoch(1497286619.123456))",
                  },
                ],
                "signature": "datetime_from_epoch(seconds)",
                "summary": "Converte o tempo de UNIX epoch em \`seconds\` para uma nova data",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "default_value",
                    "template": "@(default(undeclared.var, "default_value"))",
                  },
                  {
                    "output": "10",
                    "template": "@(default("10", "20"))",
                  },
                  {
                    "output": "value",
                    "template": "@(default("", "value"))",
                  },
                  {
                    "output": "\\x20\\x20",
                    "template": "@(default("  ", "value"))",
                  },
                  {
                    "output": "today",
                    "template": "@(default(datetime("invalid-date"), "today"))",
                  },
                  {
                    "output": "ok",
                    "template": "@(default(format_urn("invalid-urn"), "ok"))",
                  },
                ],
                "signature": "default(value, default)",
                "summary": "Retorna \`value\` se nÃ£o for vazio ou erro, de outra forma retorna \`default\`.",
              },
              {
                "detail": "O nÃºmero retornado pode conter segundos fracionados.",
                "examples": [
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T16:56:59.000000Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(epoch("2017-06-12T18:56:59.000000+02:00"))",
                  },
                  {
                    "output": "1497286619.123456",
                    "template": "@(epoch("2017-06-12T16:56:59.123456Z"))",
                  },
                  {
                    "output": "1497286619",
                    "template": "@(round_down(epoch("2017-06-12T16:56:59.123456Z")))",
                  },
                ],
                "signature": "epoch(date)",
                "summary": "Converte \`date\` para um UNIX epoch.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Ryan Lewis",
                    "template": "@(extract(contact, "name"))",
                  },
                  {
                    "output": "Testers",
                    "template": "@(extract(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract(object, properties)",
                "summary": "Toma um objeto e extrai a propriedade nomeada.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{name: Testers}",
                    "template": "@(extract_object(contact.groups[0], "name"))",
                  },
                ],
                "signature": "extract_object(object, properties...)",
                "summary": "Toma um objeto e retorna um novo objeto extraindo somente as propriedades nomeadas.",
              },
              {
                "detail": "O Ã­ndice inicia em zero. Quando separando com um espaÃ§o, o delimitador Ã© considerado para ser espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "b",
                    "template": "@(field("a,b,c", 1, ","))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a,,b,c", 1, ","))",
                  },
                  {
                    "output": "b",
                    "template": "@(field("a   b c", 1, " "))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a		b	c	d", 1, "	"))",
                  },
                  {
                    "output": "",
                    "template": "@(field("a\\t\\tb\\tc\\td", 1, " "))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(field("a,b,c", "foo", ","))",
                  },
                ],
                "signature": "field(text, index, delimiter)",
                "summary": "Divide \`text\` utilizando o dado \`delimiter\` e retorna o campo no \`index\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "[A, B, C]",
                    "template": "@(foreach(array("a", "b", "c"), upper))",
                  },
                  {
                    "output": "[a1, b1, c1]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => x & "1"))",
                  },
                  {
                    "output": "[{v: a}, {v: b}, {v: c}]",
                    "template": "@(foreach(array("a", "b", "c"), (x) => object("v", x)))",
                  },
                  {
                    "output": "[the, fox, jumped]",
                    "template": "@(foreach(array("the man", "fox", "jumped up"), word, 0))",
                  },
                ],
                "signature": "foreach(values, func, [args...])",
                "summary": "Cria uma nova matriz aplicando uma \`func\` para cada valor em \`values\`.",
              },
              {
                "detail": "Se a funÃ§Ã£o dada leva mais de um argumento, vocÃª pode passar argumentos adicionais apÃ³s a funÃ§Ã£o.",
                "examples": [
                  {
                    "output": "{a: X, b: Y}",
                    "template": "@(foreach_value(object("a", "x", "b", "y"), upper))",
                  },
                  {
                    "output": "{a: there, b: bye}",
                    "template": "@(foreach_value(object("a", "hi there", "b", "good bye"), word, 1))",
                  },
                ],
                "signature": "foreach_value(object, func, [args...])",
                "summary": "Cria um novo objeto aplicando uma \`func\` para cada valor de propriedade de \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1,234.567",
                    "template": "@(format(1234.5670))",
                  },
                  {
                    "output": "11-04-2018 13:24",
                    "template": "@(format(now()))",
                  },
                  {
                    "output": "11-04-2018",
                    "template": "@(format(today()))",
                  },
                ],
                "signature": "format(value)",
                "summary": "Formata \`value\` de acordo com o seu tipo.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)",
                "examples": [
                  {
                    "output": "18-07-1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10",
                    "template": "@(format_date("2010-05-10T19:50:00.000000Z", "YYYY M DD"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_date("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_date("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_date(date, [,format])",
                "summary": "Formata \`date\` como texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`MMM\`       - month Jan-Dec (localized)
* \`MMMM\`      - month January-December (localized)
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`EEE\`       - day of week Mon-Sun (localized)
* \`EEEE\`      - day of week Monday-Sunday (localized)
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.",
                "examples": [
                  {
                    "output": "18-07-1979 10:00",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z"))",
                  },
                  {
                    "output": "1979-07-18",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010 5 10 14:50",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY M DD tt:mm"))",
                  },
                  {
                    "output": "2010-05-10 12:50 PM",
                    "template": "@(format_datetime("2010-05-10T19:50:00.000000Z", "YYYY-MM-DD hh:mm AA", "America/Los_Angeles"))",
                  },
                  {
                    "output": "1979",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "YYYY"))",
                  },
                  {
                    "output": "7",
                    "template": "@(format_datetime("1979-07-18T15:00:00.000000Z", "M"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "format_datetime(datetime [,format [,timezone]])",
                "summary": "Formata \`datetime\` para texto de acordo com o \`format\` dado",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Rwanda",
                    "template": "@(format_location("Rwanda"))",
                  },
                  {
                    "output": "Kigali",
                    "template": "@(format_location("Rwanda > Kigali"))",
                  },
                ],
                "signature": "format_location(location)",
                "summary": "Formata uma \`location\` dada como seu nome.",
              },
              {
                "detail": "Um terceiro argumento opcional \`humanize\` pode ser falso para desabilitar o uso de milhares de separadores.",
                "examples": [
                  {
                    "output": "1,234",
                    "template": "@(format_number(1234))",
                  },
                  {
                    "output": "1,234.567",
                    "template": "@(format_number(1234.5670))",
                  },
                  {
                    "output": "1,234.57",
                    "template": "@(format_number(1234.5670, 2, true))",
                  },
                  {
                    "output": "1235",
                    "template": "@(format_number(1234.5678, 0, false))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_number("foo", 2, false))",
                  },
                ],
                "signature": "format_number(number, places [, humanize])",
                "summary": "Formata \`number\` para um dado numero de \`places\` decimais",
              },
              {
                "detail": "If \`format\` is not specified then the environment's default format is used. The format
string can consist of the following characters. The characters ' ', ':', ',', 'T', '-'
and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 0-23
* \`tt\`        - twenty four hour of the day, zero padded 00-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm (localized)
* \`AA\`        - AM or PM (localized)",
                "examples": [
                  {
                    "output": "14:50",
                    "template": "@(format_time("14:50:30.000000"))",
                  },
                  {
                    "output": "2:50 pm",
                    "template": "@(format_time("14:50:30.000000", "h:mm aa"))",
                  },
                  {
                    "output": "27",
                    "template": "@(format_time("15:00:27.000000", "s"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_time("NOT TIME", "hh:mm"))",
                  },
                ],
                "signature": "format_time(time [,format])",
                "summary": "Formata \`time\` para texto de acordo com o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0781 234 567",
                    "template": "@(format_urn("tel:+250781234567"))",
                  },
                  {
                    "output": "billy_bob",
                    "template": "@(format_urn("twitter:134252511151#billy_bob"))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(contact.urn))",
                  },
                  {
                    "output": "(202) 456-1111",
                    "template": "@(format_urn(urns.tel))",
                  },
                  {
                    "output": "foo@bar.com",
                    "template": "@(format_urn(urns.mailto))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(format_urn("NOT URN"))",
                  },
                ],
                "signature": "format_urn(urn)",
                "summary": "Formata \`urn\` para um texto amigÃ¡vel.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Red & Blue",
                    "template": "@(html_decode("Red &amp; Blue"))",
                  },
                  {
                    "output": "5 + 10",
                    "template": "@(html_decode("5 + 10"))",
                  },
                ],
                "signature": "html_decode(text)",
                "summary": "HTML decodifica \`text\`",
              },
              {
                "detail": "Se o primeiro argumento Ã© um erro, esse Ã© retornado.",
                "examples": [
                  {
                    "output": "foo",
                    "template": "@(if(1 = 1, "foo", "bar"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(if("foo" > "bar", "foo", "bar"))",
                  },
                ],
                "signature": "if(test, value1, value2)",
                "summary": "Retorna \`value1\` se \`test\` Ã© verdadeiro ou \`value2\` caso contrÃ¡rio.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(is_error(datetime("foo")))",
                  },
                  {
                    "output": "true",
                    "template": "@(is_error(run.not.existing))",
                  },
                  {
                    "output": "false",
                    "template": "@(is_error("hello"))",
                  },
                ],
                "signature": "is_error(value)",
                "summary": "Retorna se \`value\` Ã© um erro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "a|b|c",
                    "template": "@(join(array("a", "b", "c"), "|"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(join(split("a.b.c", "."), " "))",
                  },
                ],
                "signature": "join(array, separator)",
                "summary": "Junta o \`array\` dado de strings com o \`separator\` para fazer o texto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": ""string"",
                    "template": "@(json("string"))",
                  },
                  {
                    "output": "10",
                    "template": "@(json(10))",
                  },
                  {
                    "output": "null",
                    "template": "@(json(null))",
                  },
                  {
                    "output": ""5d76d86b-3bb9-4d5a-b822-c9d86f5d8e4f"",
                    "template": "@(json(contact.uuid))",
                  },
                ],
                "signature": "json(value)",
                "summary": "Retorna a representaÃ§Ã£o em JSON de \`value\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(keys(object("a", 123, "b", "hello", "c", "world")))",
                  },
                  {
                    "output": "[]",
                    "template": "@(keys(null))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys("string"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(keys(10))",
                  },
                ],
                "signature": "keys(object)",
                "summary": "Returns an array containing the property keys of \`object\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "hello",
                    "template": "@(lower("HellO"))",
                  },
                  {
                    "output": "hello",
                    "template": "@(lower("hello"))",
                  },
                  {
                    "output": "123",
                    "template": "@(lower("123"))",
                  },
                  {
                    "output": "ð",
                    "template": "@(lower("ð"))",
                  },
                ],
                "signature": "lower(text)",
                "summary": "Converte \`text\` para minÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(max(1, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(max(1, -1, 10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(max(1, 10, "foo"))",
                  },
                ],
                "signature": "max(numbers...)",
                "summary": "Retorna o maior valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1.5",
                    "template": "@(mean(1, 2))",
                  },
                  {
                    "output": "3",
                    "template": "@(mean(1, 2, 6))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mean(1, "foo"))",
                  },
                ],
                "signature": "mean(numbers...)",
                "summary": "Retorna a mÃ©dia aritimÃ©tica dos \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(min(1, 2))",
                  },
                  {
                    "output": "-10",
                    "template": "@(min(2, 2, -10))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(min(1, 2, "foo"))",
                  },
                ],
                "signature": "min(numbers...)",
                "summary": "Retorna o menor valor em \`numbers\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(mod(5, 2))",
                  },
                  {
                    "output": "0",
                    "template": "@(mod(4, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(mod(5, "foo"))",
                  },
                ],
                "signature": "mod(dividend, divisor)",
                "summary": "Retorna o resto da divisÃ£o de \`dividend\` pelo \`divisor\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T13:24:30.123456-05:00",
                    "template": "@(now())",
                  },
                ],
                "signature": "now()",
                "summary": "Retorna a data atual e o tempo no fuso horÃ¡rio atual.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(number(10))",
                  },
                  {
                    "output": "123.45",
                    "template": "@(number("123.45000"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(number("what?"))",
                  },
                ],
                "signature": "number(value)",
                "summary": "Tenta converter \`value\` em um nÃºmero.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{}",
                    "template": "@(object())",
                  },
                  {
                    "output": "{a: 123, b: hello}",
                    "template": "@(object("a", 123, "b", "hello"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(object("a"))",
                  },
                ],
                "signature": "object(pairs...)",
                "summary": "Toma os pares de nome da propriedade e valor e retorna como um novo objeto.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(or(true))",
                  },
                  {
                    "output": "true",
                    "template": "@(or(true, false, true))",
                  },
                ],
                "signature": "or(values...)",
                "summary": "Retorna se algum dos valores em \`values\` Ã© verdadeiro.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`YY\`        - last two digits of year 0-99
* \`YYYY\`      - four digits of year 0000-9999
* \`M\`         - month 1-12
* \`MM\`        - month, zero padded 01-12
* \`D\`         - day of month, 1-31
* \`DD\`        - day of month, zero padded 01-31
* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM
* \`Z\`         - hour and minute offset from UTC, or Z for UTC
* \`ZZZ\`       - hour and minute offset from UTC

Timezone should be a location name as specified in the IANA Time Zone database, such
as "America/Guayaquil" or "America/Los_Angeles". If not specified, the current timezone
will be used. An error will be returned if the timezone is not recognized.

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_datetime will return an error if it is unable to convert the text to a datetime.",
                "examples": [
                  {
                    "output": "1979-07-18T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("1979-07-18", "YYYY-MM-DD"))",
                  },
                  {
                    "output": "2010-05-10T00:00:00.000000-05:00",
                    "template": "@(parse_datetime("2010 5 10", "YYYY M DD"))",
                  },
                  {
                    "output": "2010-05-10T12:50:00.000000-07:00",
                    "template": "@(parse_datetime("2010 5 10 12:50", "YYYY M DD tt:mm", "America/Los_Angeles"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_datetime("NOT DATE", "YYYY-MM-DD"))",
                  },
                ],
                "signature": "parse_datetime(text, format [,timezone])",
                "summary": "Analisa o \`text\` em uma data usando um \`format\` dado.",
              },
              {
                "detail": "Se o texto dado nÃ£o Ã© um JSON vÃ¡lido, entÃ£o um erro Ã© retornado.",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(parse_json("{\\"foo\\": \\"bar\\"}").foo)",
                  },
                  {
                    "output": "3",
                    "template": "@(parse_json("[1,2,3,4]")[2])",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_json("invalid json"))",
                  },
                ],
                "signature": "parse_json(text)",
                "summary": "Tenta analisar \`text\` como um JSON.",
              },
              {
                "detail": "The format string can consist of the following characters. The characters
' ', ':', ',', 'T', '-' and '_' are ignored. Any other character is an error.

* \`h\`         - hour of the day 1-12
* \`hh\`        - hour of the day, zero padded 01-12
* \`t\`         - twenty four hour of the day 1-23
* \`tt\`        - twenty four hour of the day, zero padded 01-23
* \`m\`         - minute 0-59
* \`mm\`        - minute, zero padded 00-59
* \`s\`         - second 0-59
* \`ss\`        - second, zero padded 00-59
* \`fff\`       - milliseconds
* \`ffffff\`    - microseconds
* \`fffffffff\` - nanoseconds
* \`aa\`        - am or pm
* \`AA\`        - AM or PM

Note that fractional seconds will be parsed even without an explicit format identifier.
You should only specify fractional seconds when you want to assert the number of places
in the input format.

parse_time will return an error if it is unable to convert the text to a time.",
                "examples": [
                  {
                    "output": "15:28:00.000000",
                    "template": "@(parse_time("15:28", "tt:mm"))",
                  },
                  {
                    "output": "14:40:00.000000",
                    "template": "@(parse_time("2:40 pm", "h:mm aa"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(parse_time("NOT TIME", "tt:mm"))",
                  },
                ],
                "signature": "parse_time(text, format)",
                "summary": "Analisa o \`text\` em um tempo usando o \`format\` dado.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "54%",
                    "template": "@(percent(0.54234))",
                  },
                  {
                    "output": "120%",
                    "template": "@(percent(1.2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(percent("foo"))",
                  },
                ],
                "signature": "percent(number)",
                "summary": "Formata \`number\` como uma porcentagem.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "0.6075520156746239",
                    "template": "@(rand())",
                  },
                  {
                    "output": "0.48467757094734026",
                    "template": "@(rand())",
                  },
                ],
                "signature": "rand()",
                "summary": "Retorna um nÃºmero Ãºnico aleatÃ³rio entre [0.0-1.0).",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "10",
                    "template": "@(rand_between(1, 10))",
                  },
                  {
                    "output": "2",
                    "template": "@(rand_between(1, 10))",
                  },
                ],
                "signature": "rand_between()",
                "summary": "Um nÃºmero aleatÃ³rio simples no intervalo fornecido.",
              },
              {
                "detail": "ReadChars irÃ¡ dividir os nÃºmeros de forma que fiquem fÃ¡ceis de entender. Isso inclui
dividor em 3s ou 4s se apropriado.",
                "examples": [
                  {
                    "output": "1 2 3 4",
                    "template": "@(read_chars("1234"))",
                  },
                  {
                    "output": "a b c",
                    "template": "@(read_chars("abc"))",
                  },
                  {
                    "output": "a b c , d e f",
                    "template": "@(read_chars("abcdef"))",
                  },
                ],
                "signature": "read_chars(text)",
                "summary": "Converte \`text\` em algo que pode ser lido por sistemas IVR.",
              },
              {
                "detail": "Um terceiro argumento opcional \`group\` determina qual grupo correspondente serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "34",
                    "template": "@(regex_match("sda34dfddg67", "\\d+"))",
                  },
                  {
                    "output": "Bob",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 1))",
                  },
                  {
                    "output": "Smith",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("Bob Smith", "(\\w+) (\\w+)", 5))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(regex_match("abc", "[\\."))",
                  },
                ],
                "signature": "regex_match(text, pattern [,group])",
                "summary": "Retorna a primeira correspondÃªncia da expressÃ£o regular \`pattern\` no \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "bar",
                    "template": "@(remove_first_word("foo bar"))",
                  },
                  {
                    "output": "there. I'm a flow!",
                    "template": "@(remove_first_word("Hi there. I'm a flow!"))",
                  },
                ],
                "signature": "remove_first_word(text)",
                "summary": "Remove a primeira palavra do \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "********",
                    "template": "@(repeat("*", 8))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(repeat("*", "foo"))",
                  },
                ],
                "signature": "repeat(text, count)",
                "summary": "Retorna \`text\` repetido \`count\` nÃºmero de vezes.",
              },
              {
                "detail": "If \`count\` Ã© omitido ou menor do que 0, entÃ£o todas as ocorrÃªncias serÃ£o substituÃ­das.",
                "examples": [
                  {
                    "output": "zap bar zap",
                    "template": "@(replace("foo bar foo", "foo", "zap"))",
                  },
                  {
                    "output": "zap bar foo",
                    "template": "@(replace("foo bar foo", "foo", "zap", 1))",
                  },
                  {
                    "output": "foo bar",
                    "template": "@(replace("foo bar", "baz", "zap"))",
                  },
                ],
                "signature": "replace(text, needle, replacement [, count])",
                "summary": "Substitui atÃ© em atÃ© \`count\` ocorrÃªncias de \`needle\` por \`replacement\` em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11T10:30:00.000000-05:00",
                    "template": "@(replace_time(now(), "10:30"))",
                  },
                  {
                    "output": "2017-01-15T10:30:00.000000-05:00",
                    "template": "@(replace_time("2017-01-15", "10:30"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(replace_time("foo", "10:30"))",
                  },
                ],
                "signature": "replace_time(datetime)",
                "summary": "Retorna um novo datetime com a parte do tempo substituÃ­da pelo \`time\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[2, 1, 3]",
                    "template": "@(reverse(array(3, 1, 2)))",
                  },
                  {
                    "output": "[B, A, C]",
                    "template": "@(reverse(array("C", "A", "B")))",
                  },
                ],
                "signature": "reverse(array)",
                "summary": "Returns a new array with the values of \`array\` reversed.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o numero de casas decimais para arredondar como \`places\`. Se \`places\` < 0,
ele irÃ¡ arrendondar para a parte inteira do mais prÃ³xido 10^(-casas).",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round(12.146, 2))",
                  },
                  {
                    "output": "10",
                    "template": "@(round(12.146, -1))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round("notnum", 2))",
                  },
                ],
                "signature": "round(number [,places])",
                "summary": "Arredonda \`number\` para o valor mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_down(12))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.141))",
                  },
                  {
                    "output": "12",
                    "template": "@(round_down(12.6))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.141, 2))",
                  },
                  {
                    "output": "12.14",
                    "template": "@(round_down(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_down("foo"))",
                  },
                ],
                "signature": "round_down(number [,places])",
                "summary": "Arredonda \`number\` para o nÃºmero inteiro inferior mais prÃ³ximo.",
              },
              {
                "detail": "VocÃª pode, opcionalmente, passar o nÃºmero de casas decimais para arredondar como \`places\`.",
                "examples": [
                  {
                    "output": "12",
                    "template": "@(round_up(12))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.141))",
                  },
                  {
                    "output": "13",
                    "template": "@(round_up(12.6))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.141, 2))",
                  },
                  {
                    "output": "12.15",
                    "template": "@(round_up(12.146, 2))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(round_up("foo"))",
                  },
                ],
                "signature": "round_up(number [,places])",
                "summary": "Arredonda \`number\` para o inteiro superior mais prÃ³ximo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 2, 3]",
                    "template": "@(sort(array(3, 1, 2)))",
                  },
                  {
                    "output": "[A, B, C]",
                    "template": "@(sort(array("C", "A", "B")))",
                  },
                ],
                "signature": "sort(array)",
                "summary": "Returns a new array with the values of \`array\` sorted.",
              },
              {
                "detail": "Valores vazios sÃ£o removidos por uma lista retornada. HÃ¡ um parÃ¢metro final opcional \`delimiters\`  que
Ã© uma cadeia de caracteres utilizada para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a b c"))",
                  },
                  {
                    "output": "[a]",
                    "template": "@(split("a", " "))",
                  },
                  {
                    "output": "[abc, d]",
                    "template": "@(split("abc..d", "."))",
                  },
                  {
                    "output": "[a, b, c]",
                    "template": "@(split("a.b.c.", "."))",
                  },
                  {
                    "output": "[a, b, c, d]",
                    "template": "@(split("a|b,c  d", " .|,"))",
                  },
                ],
                "signature": "split(text, [,delimiters])",
                "summary": "Divide \`text\` em uma matriz com palavras separadas.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "6",
                    "template": "@(sum(array(1, 2, "3")))",
                  },
                ],
                "signature": "sum(array)",
                "summary": "Sums the items in the given \`array\`.",
              },
              {
                "detail": "Um erro Ã© retornado se o valor nÃ£o puder ser convertido",
                "examples": [
                  {
                    "output": "true",
                    "template": "@(text(3 = 3))",
                  },
                  {
                    "output": ""123.45"",
                    "template": "@(json(text(123.45)))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(text(1 / 0))",
                  },
                ],
                "signature": "text(value)",
                "summary": "Tenta converter \`value\` em um texto.",
              },
              {
                "detail": "O valor de retorno serÃ¡ -1 se \`text1\` vier antes de \`text2\`, 0 se forem iguais
e 1 se \`text1\` vier depois de \`text2\`.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(text_compare("abc", "abc"))",
                  },
                  {
                    "output": "-1",
                    "template": "@(text_compare("abc", "def"))",
                  },
                  {
                    "output": "1",
                    "template": "@(text_compare("zzz", "aaa"))",
                  },
                ],
                "signature": "text_compare(text1, text2)",
                "summary": "Retorna a ordem de dicionÃ¡rio de \`text1\` e \`text2\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "3",
                    "template": "@(text_length("abc"))",
                  },
                  {
                    "output": "6",
                    "template": "@(text_length(array(2, 3)))",
                  },
                ],
                "signature": "text_length(value)",
                "summary": "Retorna o tamanho (nÃºmero de caracteres) de \`value\` quando convertido em texto.",
              },
              {
                "detail": "Se o \`end\` nÃ£o foi especificado, entÃ£o todo o resto de \`text\` serÃ¡ incluido. Valores negativos
para \`start\` ou \`end\`, comeÃ§arÃ£o no final do \`text\`.",
                "examples": [
                  {
                    "output": "llo",
                    "template": "@(text_slice("hello", 2))",
                  },
                  {
                    "output": "el",
                    "template": "@(text_slice("hello", 1, 3))",
                  },
                  {
                    "output": "lo",
                    "template": "@(text_slice("helloð", -3, -1))",
                  },
                  {
                    "output": "",
                    "template": "@(text_slice("hello", 7))",
                  },
                ],
                "signature": "text_slice(text, start [, end])",
                "summary": "Retorna a porÃ§Ã£o de \`text\` entre \`start\` (inclusivo) e \`end\` (exclusivo).",
              },
              {
                "detail": "Se for texto, entÃ£o serÃ¡ analisado para um tempo utilizando o formato padrÃ£o.
Um erro Ã© retornado se o valor nÃ£o puder ser convertido.",
                "examples": [
                  {
                    "output": "10:30:00.000000",
                    "template": "@(time("10:30"))",
                  },
                  {
                    "output": "22:30:45.000000",
                    "template": "@(time("10:30:45 PM"))",
                  },
                  {
                    "output": "10:30:45.123456",
                    "template": "@(time(datetime("1979-07-18T10:30:45.123456Z")))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time("what?"))",
                  },
                ],
                "signature": "time(value)",
                "summary": "Tenta converter \`value\` em um tempo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "14:40:15.000000",
                    "template": "@(time_from_parts(14, 40, 15))",
                  },
                  {
                    "output": "08:10:00.000000",
                    "template": "@(time_from_parts(8, 10, 0))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(time_from_parts(25, 0, 0))",
                  },
                ],
                "signature": "time_from_parts(hour, minute, second)",
                "summary": "Cria um tempo a partir de \`hour\`, \`minute\` e \`second\`",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "Foo",
                    "template": "@(title("foo"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("ryan lewis"))",
                  },
                  {
                    "output": "Ryan Lewis",
                    "template": "@(title("RYAN LEWIS"))",
                  },
                  {
                    "output": "123",
                    "template": "@(title(123))",
                  },
                ],
                "signature": "title(text)",
                "summary": "Deixa com letra maiÃºscula cada palavra em \`text\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "2018-04-11",
                    "template": "@(today())",
                  },
                ],
                "signature": "today()",
                "summary": "Retorna a data atual no fuso horÃ¡rio do ambiente.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "hello world",
                    "template": "@(trim(" hello world    "))",
                  },
                  {
                    "output": "123157568",
                    "template": "@(trim("+123157568", "+"))",
                  },
                ],
                "signature": "trim(text, [,chars])",
                "summary": "Remove espaÃ§o em branco de qualquer uma das extremidades do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "*hello world   *",
                    "template": "@("*" & trim_left(" hello world   ") & "*")",
                  },
                  {
                    "output": "12345+",
                    "template": "@(trim_left("+12345+", "+"))",
                  },
                ],
                "signature": "trim_left(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do comeÃ§o do \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`chars\` que Ã© uma string de caracters a serem removidos ao invÃ©s de espaÃ§os em branco.",
                "examples": [
                  {
                    "output": "* hello world*",
                    "template": "@("*" & trim_right(" hello world   ") & "*")",
                  },
                  {
                    "output": "+12345",
                    "template": "@(trim_right("+12345+", "+"))",
                  },
                ],
                "signature": "trim_right(text, [,chars])",
                "summary": "Remove espaÃ§o em branco do final do \`text\`.",
              },
              {
                "detail": "Se nÃ£o existe informaÃ§Ã£o presente de fuso horÃ¡rio na data, entÃ£o o fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "UTC",
                    "template": "@(tz("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "America/Guayaquil",
                    "template": "@(tz("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz("foo"))",
                  },
                ],
                "signature": "tz(date)",
                "summary": "Retorna o nome do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "O offset Ã© retornado no formato \`[+/-]HH:MM\`. Se nenhuma informaÃ§Ã£o de fuso horÃ¡rio  estÃ¡ presente na data, 
entÃ£o o offset do fuso horÃ¡rio atual serÃ¡ retornado.",
                "examples": [
                  {
                    "output": "+0000",
                    "template": "@(tz_offset("2017-01-15T02:15:18.123456Z"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15 02:15:18PM"))",
                  },
                  {
                    "output": "-0500",
                    "template": "@(tz_offset("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(tz_offset("foo"))",
                  },
                ],
                "signature": "tz_offset(date)",
                "summary": "Retorna o offset do fuso horÃ¡rio de \`date\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "[1, 3, 2]",
                    "template": "@(unique(array(1, 3, 2, 3)))",
                  },
                  {
                    "output": "[hi, there]",
                    "template": "@(unique(array("hi", "there", "hi")))",
                  },
                ],
                "signature": "unique(array)",
                "summary": "Returns the unique values in \`array\`.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "ASDF",
                    "template": "@(upper("Asdf"))",
                  },
                  {
                    "output": "123",
                    "template": "@(upper(123))",
                  },
                ],
                "signature": "upper(text)",
                "summary": "Converte \`text\` para maiÃºsculo.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "two%20%26%20words",
                    "template": "@(url_encode("two & words"))",
                  },
                  {
                    "output": "10",
                    "template": "@(url_encode(10))",
                  },
                ],
                "signature": "url_encode(text)",
                "summary": "Codifica o \`text\` para ser usado como uma URL de parÃ¢metro.",
              },
              {
                "detail": "",
                "examples": [
                  {
                    "output": "{display: , path: +593979012345, scheme: tel}",
                    "template": "@(urn_parts("tel:+593979012345"))",
                  },
                  {
                    "output": "{display: bobby, path: 3263621177, scheme: twitterid}",
                    "template": "@(urn_parts("twitterid:3263621177#bobby"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(urn_parts("not a urn"))",
                  },
                ],
                "signature": "urn_parts(urn)",
                "summary": "Analise uma URN em suas diferentes partes",
              },
              {
                "detail": "A semana Ã© considerada para comeÃ§ar no Domingo e a semana contendo 1.Âº de Janeiro Ã© a semana de nÃºmero 1.",
                "examples": [
                  {
                    "output": "1",
                    "template": "@(week_number("2019-01-01"))",
                  },
                  {
                    "output": "30",
                    "template": "@(week_number("2019-07-23T16:56:59.000000Z"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(week_number("xx"))",
                  },
                ],
                "signature": "week_number(date)",
                "summary": "Retorna o nÃºmero da semana (1-54) de \`date\`.",
              },
              {
                "detail": "A semana Ã© considerada para iniciar no Domingo, entÃ£o Domingo retorna 0, Segunda retorna 1 etc.",
                "examples": [
                  {
                    "output": "0",
                    "template": "@(weekday("2017-01-15"))",
                  },
                  {
                    "output": "ERROR",
                    "template": "@(weekday("foo"))",
                  },
                ],
                "signature": "weekday(date)",
                "summary": "Retorna o dia da semana para \`date\`.",
              },
              {
                "detail": "Ãndices comeÃ§am em zero. HÃ¡ um parÃ¢metro final opcional \`delimiters\` que
Ã© uma cadeia de caracteres usada para separar o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word("bee cat dog", 0))",
                  },
                  {
                    "output": "bee",
                    "template": "@(word("bee.cat,dog", 0))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", 2))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word("bee.cat,dog", -1))",
                  },
                  {
                    "output": "cat",
                    "template": "@(word("bee.cat,dog", -2))",
                  },
                  {
                    "output": "cat,dog",
                    "template": "@(word("bee.*cat,dog", 1, ".*=|"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word("O'Grady O'Flaggerty", 1, " "))",
                  },
                ],
                "signature": "word(text, index [,delimiters])",
                "summary": "Retorna a palavra em um \`index\` no \`text\`.",
              },
              {
                "detail": "Existe um parÃ¢metro final opcional \`delimiters\` que Ã© uma string de caracteres utilizada
para dividir o texto em palavras. ",
                "examples": [
                  {
                    "output": "2",
                    "template": "@(word_count("foo bar"))",
                  },
                  {
                    "output": "1",
                    "template": "@(word_count(10))",
                  },
                  {
                    "output": "0",
                    "template": "@(word_count(""))",
                  },
                  {
                    "output": "4",
                    "template": "@(word_count("ðððð"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("bee.*cat,dog", ".*=|"))",
                  },
                  {
                    "output": "2",
                    "template": "@(word_count("O'Grady O'Flaggerty", " "))",
                  },
                ],
                "signature": "word_count(text [,delimiters])",
                "summary": "Retorna o nÃºmero de palavras em \`text\`.",
              },
              {
                "detail": "As palavras retornadas sÃ£o aquelas de \`start\` atÃ©, mas nÃ£o incluindo, \`end\`. Ãndices comeÃ§am no zero e um valor final
negativo significa que todas as palavras apÃ³s o inÃ­cio devem ser retornadas. Existe um parÃ¢metro final opcional \`delimiter\`
que Ã© uma string com caracteres utilizados para dividir o texto em palavras.",
                "examples": [
                  {
                    "output": "bee",
                    "template": "@(word_slice("bee cat dog", 0, 1))",
                  },
                  {
                    "output": "bee cat",
                    "template": "@(word_slice("bee cat dog", 0, 2))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1, -1))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee cat dog", 1))",
                  },
                  {
                    "output": "dog",
                    "template": "@(word_slice("bee cat dog", 2, 3))",
                  },
                  {
                    "output": "",
                    "template": "@(word_slice("bee cat dog", 3, 10))",
                  },
                  {
                    "output": "cat dog",
                    "template": "@(word_slice("bee.*cat,dog", 1, -1, ".*=|,"))",
                  },
                  {
                    "output": "O'Flaggerty",
                    "template": "@(word_slice("O'Grady O'Flaggerty", 1, 2, " "))",
                  },
                ],
                "signature": "word_slice(text, start, end [,delimiters])",
                "summary": "Extrai uma sub sequÃªncia de palavras de \`text\`.",
              },
            ],
          },
          "type": "expression",
        },
        "externalServices": {
          "items": {},
          "type": "external_service",
        },
        "fields": {
          "items": {
            "unknown_field": {
              "id": "unknown_field",
              "name": "Unknown Field",
              "type": "field",
            },
          },
          "type": "field",
        },
        "flows": {
          "items": {},
          "type": "flow",
        },
        "groups": {
          "items": {
            "2429d573-80d7-47f8-879f-f2ba442a1bfd": {
              "id": "2429d573-80d7-47f8-879f-f2ba442a1bfd",
              "name": "Unsatisfied Customers",
              "type": "group",
            },
            "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f": {
              "id": "783a5393-c47d-4dd0-bcfb-9ba8081d2f3f",
              "name": "Unknown Group",
              "type": "group",
            },
          },
          "type": "group",
        },
        "labels": {
          "items": {},
          "type": "label",
        },
        "languages": {
          "items": {
            "base": {
              "id": "base",
              "name": "Default",
              "type": "language",
            },
          },
          "type": "language",
        },
        "recipients": {
          "items": {},
          "type": "contact",
        },
        "results": {
          "items": {
            "name": {
              "id": "name",
              "name": "Name",
              "references": [
                {
                  "nodeUUID": "d642b014-3c91-418f-ad5b-0fb4f8c5ee60",
                },
              ],
              "type": "result",
            },
            "phone": {
              "id": "phone",
              "name": "Phone",
              "references": [
                {
                  "actionUUID": "9c10156e-aec0-45a3-a144-da84e87222c2",
                  "nodeUUID": "a8a09d00-7cab-4375-9d44-58f6783732f6",
                },
              ],
              "type": "result",
            },
            "this_can_be_something_that_is_really_long": {
              "id": "this_can_be_something_that_is_really_long",
              "name": "This can be something that is really long",
              "references": [
                {
                  "nodeUUID": "fc349688-3589-42ac-b61c-d5ef54cedaa5",
                },
              ],
              "type": "result",
            },
          },
          "type": "result",
        },
        "revisions": {
          "endpoint": "/assets/revisions.json/",
          "items": {
            "202": {
              "created_on": "2019-02-11T21:34:49.224697Z",
              "id": 202,
              "revision": 113,
              "user": {
                "email": "org1.admin@nyaruka.com",
                "name": "",
              },
              "version": "11.10",
            },
          },
          "type": "revision",
        },
        "ticketers": {
          "items": {},
          "type": "ticketer",
        },
      },
    },
    "type": "UPDATE_ASSET_MAP",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": 113,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "saving": false,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;

exports[`Flow Manipulation > actions > should replace router node with a single-action node 1`] = `
{
  "inboundConnections": {
    "node0_exit0": "node0",
  },
  "node": {
    "actions": [
      {
        "all_urns": false,
        "attachments": [],
        "quick_replies": [],
        "templating": null,
        "text": "Hey!",
        "type": "send_msg",
        "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
      },
    ],
    "exits": [
      {
        "destination_uuid": null,
        "uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
      },
    ],
    "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
  },
  "ui": {
    "position": {
      "bottom": 370,
      "left": 0,
      "right": 220,
      "top": 280,
    },
    "type": "execute_actions",
  },
}
`;

exports[`Flow Manipulation > init > should gracefully handle missing ui 1`] = `
{
  "nodes": {
    "node0": {
      "inboundConnections": {},
      "node": {
        "actions": [
          {
            "text": "Hi there, this is your first action!",
            "type": "send_msg",
            "uuid": "node0_action0",
          },
          {
            "groups": [
              {
                "name": "Flow Participants",
                "uuid": "group_0",
              },
            ],
            "type": "add_contact_groups",
            "uuid": "node0_action1",
          },
          {
            "groups": [
              {
                "name": "Nonresponsive",
                "uuid": "group_1",
              },
            ],
            "type": "remove_contact_groups",
            "uuid": "node0_action2",
          },
          {
            "labels": [
              {
                "name": "Help",
                "uuid": "label_0",
              },
              {
                "name": "Feedback",
                "uuid": "label_1",
              },
            ],
            "type": "add_input_labels",
            "uuid": "node0_action3",
          },
          {
            "name": "Started",
            "type": "set_run_result",
            "uuid": "node0_action4",
            "value": "true",
          },
        ],
        "exits": [
          {
            "destination_uuid": "node1",
            "name": null,
            "uuid": "node0_exit0",
          },
        ],
        "uuid": "node0",
      },
      "ui": {
        "position": {
          "left": 0,
          "top": 0,
        },
        "type": "execute_actions",
      },
    },
    "node1": {
      "inboundConnections": {
        "node0_exit0": "node0",
      },
      "node": {
        "actions": [],
        "exits": [
          {
            "destination_uuid": "node2",
            "uuid": "node1_exit0",
          },
          {
            "destination_uuid": "node2",
            "uuid": "node1_exit1",
          },
          {
            "destination_uuid": "node2",
            "uuid": "node1_exit2",
          },
        ],
        "router": {
          "cases": [
            {
              "arguments": [
                "red",
              ],
              "category_uuid": "node1_cat0",
              "type": "has_any_word",
              "uuid": "node1_case0",
            },
            {
              "arguments": [
                "green",
              ],
              "category_uuid": "node1_cat1",
              "type": "has_any_word",
              "uuid": "node1_case1",
            },
          ],
          "categories": [
            {
              "exit_uuid": "node1_exit0",
              "name": "Red",
              "uuid": "node1_cat0",
            },
            {
              "exit_uuid": "node1_exit1",
              "name": "Green",
              "uuid": "node1_cat1",
            },
            {
              "exit_uuid": "node1_exit2",
              "name": "Other",
              "uuid": "node1_cat2",
            },
          ],
          "default_exit_uuid": "node1_exit2",
          "operand": "@run.input",
          "result_name": "color",
          "type": "switch",
          "wait": {
            "type": "msg",
          },
        },
        "uuid": "node1",
      },
      "ui": {
        "position": {
          "left": 0,
          "top": 150,
        },
        "type": "wait_for_response",
      },
    },
    "node2": {
      "inboundConnections": {
        "node1_exit0": "node1",
        "node1_exit1": "node1",
        "node1_exit2": "node1",
      },
      "node": {
        "actions": [
          {
            "text": "This has been really great.",
            "type": "send_msg",
            "uuid": "node2_action0",
          },
          {
            "field": {
              "key": "unknown_field",
              "name": "Unknown Field",
            },
            "type": "set_contact_field",
            "uuid": "node2_action1",
            "value": "Some Value",
          },
        ],
        "exits": [
          {
            "destination_uuid": "node3",
            "name": null,
            "uuid": "node2_exit0",
          },
        ],
        "uuid": "node2",
      },
      "ui": {
        "position": {
          "left": 0,
          "top": 300,
        },
        "type": "execute_actions",
      },
    },
    "node3": {
      "inboundConnections": {
        "node2_exit0": "node2",
      },
      "node": {
        "actions": [
          {
            "text": "Thanks for playing!",
            "type": "send_msg",
            "uuid": "node3_action0",
          },
        ],
        "exits": [
          {
            "destination_uuid": null,
            "name": null,
            "uuid": "node3_exit0",
          },
        ],
        "uuid": "node3",
      },
      "ui": {
        "position": {
          "left": 0,
          "top": 450,
        },
        "type": "execute_actions",
      },
    },
  },
}
`;

exports[`Flow Manipulation > node editor > normal editing > should edit router nodes 1`] = `
[
  {
    "payload": {
      "typeConfig": {
        "aliases": [
          "switch",
        ],
        "description": "Wait for the contact to respond",
        "form": [Function],
        "localization": [Function],
        "localizeableKeys": [
          "categories",
          "cases",
        ],
        "name": "Wait for response",
        "type": "wait_for_response",
        "visibility": [
          "messaging",
          "messaging_offline",
        ],
      },
    },
    "type": "UPDATE_TYPE_CONFIG",
  },
  {
    "payload": {
      "settings": {
        "localizations": [],
        "originalNode": {
          "inboundConnections": {
            "node0_exit0": "node0",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          "ui": {
            "position": {
              "bottom": 370,
              "left": 0,
              "right": 220,
              "top": 280,
            },
            "type": "wait_for_response",
          },
        },
        "showAdvanced": false,
      },
    },
    "type": "UPDATE_NODE_EDITOR_SETTINGS",
  },
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;

exports[`Flow Manipulation > node editor > opening and closing > should only update things that are set 1`] = `
[
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": null,
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "settings": null,
    },
    "type": "UPDATE_NODE_EDITOR_SETTINGS",
  },
]
`;

exports[`Flow Manipulation > node editor > opening and closing > should reset the node editor 1`] = `
[
  {
    "payload": {
      "editorState": {
        "ghostNode": null,
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "settings": null,
    },
    "type": "UPDATE_NODE_EDITOR_SETTINGS",
  },
]
`;

exports[`Flow Manipulation > nodes > removal > should remove node node0 > Remove node0 1`] = `
{
  "node1": {
    "inboundConnections": {},
    "node": {
      "actions": [],
      "exits": [
        {
          "destination_uuid": "node2",
          "uuid": "node1_exit0",
        },
        {
          "destination_uuid": "node2",
          "uuid": "node1_exit1",
        },
        {
          "destination_uuid": "node2",
          "uuid": "node1_exit2",
        },
      ],
      "router": {
        "cases": [
          {
            "arguments": [
              "red",
            ],
            "category_uuid": "node1_cat0",
            "type": "has_any_word",
            "uuid": "node1_case0",
          },
          {
            "arguments": [
              "green",
            ],
            "category_uuid": "node1_cat1",
            "type": "has_any_word",
            "uuid": "node1_case1",
          },
        ],
        "categories": [
          {
            "exit_uuid": "node1_exit0",
            "name": "Red",
            "uuid": "node1_cat0",
          },
          {
            "exit_uuid": "node1_exit1",
            "name": "Green",
            "uuid": "node1_cat1",
          },
          {
            "exit_uuid": "node1_exit2",
            "name": "Other",
            "uuid": "node1_cat2",
          },
        ],
        "default_exit_uuid": "node1_exit2",
        "operand": "@run.input",
        "result_name": "color",
        "type": "switch",
        "wait": {
          "type": "msg",
        },
      },
      "uuid": "node1",
    },
    "ui": {
      "position": {
        "bottom": 370,
        "left": 0,
        "right": 220,
        "top": 280,
      },
      "type": "wait_for_response",
    },
  },
  "node2": {
    "inboundConnections": {
      "node1_exit0": "node1",
      "node1_exit1": "node1",
      "node1_exit2": "node1",
    },
    "node": {
      "actions": [
        {
          "text": "This has been really great.",
          "type": "send_msg",
          "uuid": "node2_action0",
        },
        {
          "field": {
            "key": "unknown_field",
            "name": "Unknown Field",
          },
          "type": "set_contact_field",
          "uuid": "node2_action1",
          "value": "Some Value",
        },
      ],
      "exits": [
        {
          "destination_uuid": "node3",
          "name": null,
          "uuid": "node2_exit0",
        },
      ],
      "uuid": "node2",
    },
    "ui": {
      "position": {
        "bottom": 498,
        "left": 0,
        "right": 220,
        "top": 400,
      },
    },
  },
  "node3": {
    "inboundConnections": {
      "node2_exit0": "node2",
    },
    "node": {
      "actions": [
        {
          "text": "Thanks for playing!",
          "type": "send_msg",
          "uuid": "node3_action0",
        },
      ],
      "exits": [
        {
          "destination_uuid": null,
          "name": null,
          "uuid": "node3_exit0",
        },
      ],
      "uuid": "node3",
    },
    "ui": {
      "position": {
        "bottom": 598,
        "left": 0,
        "right": 220,
        "top": 520,
      },
    },
  },
}
`;

exports[`Flow Manipulation > nodes > removal > should remove node node1 > Remove node1 1`] = `
{
  "node0": {
    "inboundConnections": {},
    "node": {
      "actions": [
        {
          "text": "Hi there, this is your first action!",
          "type": "send_msg",
          "uuid": "node0_action0",
        },
        {
          "groups": [
            {
              "name": "Flow Participants",
              "uuid": "group_0",
            },
          ],
          "type": "add_contact_groups",
          "uuid": "node0_action1",
        },
        {
          "groups": [
            {
              "name": "Nonresponsive",
              "uuid": "group_1",
            },
          ],
          "type": "remove_contact_groups",
          "uuid": "node0_action2",
        },
        {
          "labels": [
            {
              "name": "Help",
              "uuid": "label_0",
            },
            {
              "name": "Feedback",
              "uuid": "label_1",
            },
          ],
          "type": "add_input_labels",
          "uuid": "node0_action3",
        },
        {
          "name": "Started",
          "type": "set_run_result",
          "uuid": "node0_action4",
          "value": "true",
        },
      ],
      "exits": [
        {
          "destination_uuid": null,
          "name": null,
          "uuid": "node0_exit0",
        },
      ],
      "uuid": "node0",
    },
    "ui": {
      "position": {
        "bottom": 254,
        "left": 0,
        "right": 220,
        "top": 0,
      },
    },
  },
  "node2": {
    "inboundConnections": {},
    "node": {
      "actions": [
        {
          "text": "This has been really great.",
          "type": "send_msg",
          "uuid": "node2_action0",
        },
        {
          "field": {
            "key": "unknown_field",
            "name": "Unknown Field",
          },
          "type": "set_contact_field",
          "uuid": "node2_action1",
          "value": "Some Value",
        },
      ],
      "exits": [
        {
          "destination_uuid": "node3",
          "name": null,
          "uuid": "node2_exit0",
        },
      ],
      "uuid": "node2",
    },
    "ui": {
      "position": {
        "bottom": 498,
        "left": 0,
        "right": 220,
        "top": 400,
      },
    },
  },
  "node3": {
    "inboundConnections": {
      "node2_exit0": "node2",
    },
    "node": {
      "actions": [
        {
          "text": "Thanks for playing!",
          "type": "send_msg",
          "uuid": "node3_action0",
        },
      ],
      "exits": [
        {
          "destination_uuid": null,
          "name": null,
          "uuid": "node3_exit0",
        },
      ],
      "uuid": "node3",
    },
    "ui": {
      "position": {
        "bottom": 598,
        "left": 0,
        "right": 220,
        "top": 520,
      },
    },
  },
}
`;

exports[`Flow Manipulation > nodes > removal > should remove node node2 > Remove node2 1`] = `
{
  "node0": {
    "inboundConnections": {},
    "node": {
      "actions": [
        {
          "text": "Hi there, this is your first action!",
          "type": "send_msg",
          "uuid": "node0_action0",
        },
        {
          "groups": [
            {
              "name": "Flow Participants",
              "uuid": "group_0",
            },
          ],
          "type": "add_contact_groups",
          "uuid": "node0_action1",
        },
        {
          "groups": [
            {
              "name": "Nonresponsive",
              "uuid": "group_1",
            },
          ],
          "type": "remove_contact_groups",
          "uuid": "node0_action2",
        },
        {
          "labels": [
            {
              "name": "Help",
              "uuid": "label_0",
            },
            {
              "name": "Feedback",
              "uuid": "label_1",
            },
          ],
          "type": "add_input_labels",
          "uuid": "node0_action3",
        },
        {
          "name": "Started",
          "type": "set_run_result",
          "uuid": "node0_action4",
          "value": "true",
        },
      ],
      "exits": [
        {
          "destination_uuid": "node1",
          "name": null,
          "uuid": "node0_exit0",
        },
      ],
      "uuid": "node0",
    },
    "ui": {
      "position": {
        "bottom": 254,
        "left": 0,
        "right": 220,
        "top": 0,
      },
    },
  },
  "node1": {
    "inboundConnections": {
      "node0_exit0": "node0",
    },
    "node": {
      "actions": [],
      "exits": [
        {
          "destination_uuid": "node3",
          "uuid": "node1_exit0",
        },
        {
          "destination_uuid": "node3",
          "uuid": "node1_exit1",
        },
        {
          "destination_uuid": "node3",
          "uuid": "node1_exit2",
        },
      ],
      "router": {
        "cases": [
          {
            "arguments": [
              "red",
            ],
            "category_uuid": "node1_cat0",
            "type": "has_any_word",
            "uuid": "node1_case0",
          },
          {
            "arguments": [
              "green",
            ],
            "category_uuid": "node1_cat1",
            "type": "has_any_word",
            "uuid": "node1_case1",
          },
        ],
        "categories": [
          {
            "exit_uuid": "node1_exit0",
            "name": "Red",
            "uuid": "node1_cat0",
          },
          {
            "exit_uuid": "node1_exit1",
            "name": "Green",
            "uuid": "node1_cat1",
          },
          {
            "exit_uuid": "node1_exit2",
            "name": "Other",
            "uuid": "node1_cat2",
          },
        ],
        "default_exit_uuid": "node1_exit2",
        "operand": "@run.input",
        "result_name": "color",
        "type": "switch",
        "wait": {
          "type": "msg",
        },
      },
      "uuid": "node1",
    },
    "ui": {
      "position": {
        "bottom": 370,
        "left": 0,
        "right": 220,
        "top": 280,
      },
      "type": "wait_for_response",
    },
  },
  "node3": {
    "inboundConnections": {
      "node1_exit0": "node1",
      "node1_exit1": "node1",
      "node1_exit2": "node1",
    },
    "node": {
      "actions": [
        {
          "text": "Thanks for playing!",
          "type": "send_msg",
          "uuid": "node3_action0",
        },
      ],
      "exits": [
        {
          "destination_uuid": null,
          "name": null,
          "uuid": "node3_exit0",
        },
      ],
      "uuid": "node3",
    },
    "ui": {
      "position": {
        "bottom": 598,
        "left": 0,
        "right": 220,
        "top": 520,
      },
    },
  },
}
`;

exports[`Flow Manipulation > nodes > removal > should remove node node3 > Remove node3 1`] = `
{
  "node0": {
    "inboundConnections": {},
    "node": {
      "actions": [
        {
          "text": "Hi there, this is your first action!",
          "type": "send_msg",
          "uuid": "node0_action0",
        },
        {
          "groups": [
            {
              "name": "Flow Participants",
              "uuid": "group_0",
            },
          ],
          "type": "add_contact_groups",
          "uuid": "node0_action1",
        },
        {
          "groups": [
            {
              "name": "Nonresponsive",
              "uuid": "group_1",
            },
          ],
          "type": "remove_contact_groups",
          "uuid": "node0_action2",
        },
        {
          "labels": [
            {
              "name": "Help",
              "uuid": "label_0",
            },
            {
              "name": "Feedback",
              "uuid": "label_1",
            },
          ],
          "type": "add_input_labels",
          "uuid": "node0_action3",
        },
        {
          "name": "Started",
          "type": "set_run_result",
          "uuid": "node0_action4",
          "value": "true",
        },
      ],
      "exits": [
        {
          "destination_uuid": "node1",
          "name": null,
          "uuid": "node0_exit0",
        },
      ],
      "uuid": "node0",
    },
    "ui": {
      "position": {
        "bottom": 254,
        "left": 0,
        "right": 220,
        "top": 0,
      },
    },
  },
  "node1": {
    "inboundConnections": {
      "node0_exit0": "node0",
    },
    "node": {
      "actions": [],
      "exits": [
        {
          "destination_uuid": "node2",
          "uuid": "node1_exit0",
        },
        {
          "destination_uuid": "node2",
          "uuid": "node1_exit1",
        },
        {
          "destination_uuid": "node2",
          "uuid": "node1_exit2",
        },
      ],
      "router": {
        "cases": [
          {
            "arguments": [
              "red",
            ],
            "category_uuid": "node1_cat0",
            "type": "has_any_word",
            "uuid": "node1_case0",
          },
          {
            "arguments": [
              "green",
            ],
            "category_uuid": "node1_cat1",
            "type": "has_any_word",
            "uuid": "node1_case1",
          },
        ],
        "categories": [
          {
            "exit_uuid": "node1_exit0",
            "name": "Red",
            "uuid": "node1_cat0",
          },
          {
            "exit_uuid": "node1_exit1",
            "name": "Green",
            "uuid": "node1_cat1",
          },
          {
            "exit_uuid": "node1_exit2",
            "name": "Other",
            "uuid": "node1_cat2",
          },
        ],
        "default_exit_uuid": "node1_exit2",
        "operand": "@run.input",
        "result_name": "color",
        "type": "switch",
        "wait": {
          "type": "msg",
        },
      },
      "uuid": "node1",
    },
    "ui": {
      "position": {
        "bottom": 370,
        "left": 0,
        "right": 220,
        "top": 280,
      },
      "type": "wait_for_response",
    },
  },
  "node2": {
    "inboundConnections": {
      "node1_exit0": "node1",
      "node1_exit1": "node1",
      "node1_exit2": "node1",
    },
    "node": {
      "actions": [
        {
          "text": "This has been really great.",
          "type": "send_msg",
          "uuid": "node2_action0",
        },
        {
          "field": {
            "key": "unknown_field",
            "name": "Unknown Field",
          },
          "type": "set_contact_field",
          "uuid": "node2_action1",
          "value": "Some Value",
        },
      ],
      "exits": [
        {
          "destination_uuid": null,
          "name": null,
          "uuid": "node2_exit0",
        },
      ],
      "uuid": "node2",
    },
    "ui": {
      "position": {
        "bottom": 498,
        "left": 0,
        "right": 220,
        "top": 400,
      },
    },
  },
}
`;

exports[`Flow Manipulation > nodes > should store a pending connection when starting a drag 1`] = `
[
  {
    "payload": {
      "editorState": {
        "activity": {
          "nodes": {},
          "segments": {},
        },
        "activityInterval": 5000,
        "currentGuide": null,
        "currentRevision": null,
        "debug": null,
        "dragActive": false,
        "dragDownPosition": null,
        "dragGroup": false,
        "dragNodeUUID": null,
        "dragSelection": null,
        "dragStartTime": 0,
        "fetchingFlow": false,
        "ghostNode": {
          "ghost": true,
          "inboundConnections": {
            "node0_exit0": "node0",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": null,
                "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
              },
            ],
            "router": {
              "cases": [],
              "categories": [
                {
                  "exit_uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
                  "name": "All Responses",
                  "uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
                },
              ],
              "default_category_uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
              "result_name": "Result 1",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
            "type": "wait_for_response",
          },
        },
        "guidingStep": -1,
        "language": null,
        "liveActivity": {
          "nodes": {},
          "segments": {},
        },
        "mouseState": "select",
        "popped": null,
        "scrollToAction": null,
        "scrollToNode": null,
        "selectionActive": false,
        "simulating": false,
        "translating": false,
        "visible": true,
        "warnings": {},
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;

exports[`Flow Manipulation > on update canvas positions > should update positions 1`] = `
[
  {
    "payload": {
      "nodes": {
        "node0": {
          "inboundConnections": {},
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          "ui": {
            "position": {
              "left": 100,
              "top": 100,
            },
          },
        },
        "node1": {
          "inboundConnections": {
            "node0_exit0": "node0",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          "ui": {
            "position": {
              "left": 200,
              "top": 200,
            },
            "type": "wait_for_response",
          },
        },
        "node2": {
          "inboundConnections": {
            "node1_exit0": "node1",
            "node1_exit1": "node1",
            "node1_exit2": "node1",
          },
          "node": {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          "ui": {
            "position": {
              "bottom": 498,
              "left": 0,
              "right": 220,
              "top": 400,
            },
          },
        },
        "node3": {
          "inboundConnections": {
            "node2_exit0": "node2",
          },
          "node": {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
          "ui": {
            "position": {
              "bottom": 598,
              "left": 0,
              "right": 220,
              "top": 520,
            },
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
]
`;

exports[`Flow Manipulation > on update canvas positions > should update positions 2`] = `
[
  {
    "payload": {
      "nodes": {
        "node0": {
          "inboundConnections": {},
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          "ui": {
            "position": {
              "left": 100,
              "top": 100,
            },
          },
        },
        "node1": {
          "inboundConnections": {
            "node0_exit0": "node0",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          "ui": {
            "position": {
              "left": 200,
              "top": 200,
            },
            "type": "wait_for_response",
          },
        },
        "node2": {
          "inboundConnections": {
            "node1_exit0": "node1",
            "node1_exit1": "node1",
            "node1_exit2": "node1",
          },
          "node": {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          "ui": {
            "position": {
              "bottom": 498,
              "left": 0,
              "right": 220,
              "top": 400,
            },
          },
        },
        "node3": {
          "inboundConnections": {
            "node2_exit0": "node2",
          },
          "node": {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
          "ui": {
            "position": {
              "bottom": 598,
              "left": 0,
              "right": 220,
              "top": 520,
            },
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [],
          "nodes": {
            "node0": {
              "position": {
                "bottom": 254,
                "left": 0,
                "right": 220,
                "top": 10,
              },
            },
            "node1": {
              "position": {
                "bottom": 370,
                "left": 0,
                "right": 220,
                "top": 280,
              },
              "type": "wait_for_response",
            },
            "node2": {
              "position": {
                "bottom": 498,
                "left": 0,
                "right": 220,
                "top": 400,
              },
            },
            "node3": {
              "position": {
                "bottom": 598,
                "left": 0,
                "right": 220,
                "top": 520,
              },
            },
          },
          "stickies": {
            "sticky0": {
              "body": "The body for sticky0",
              "position": {
                "bottom": NaN,
                "left": 300,
                "right": NaN,
                "top": 300,
              },
              "title": "sticky0",
            },
          },
        },
        "language": "eng",
        "localization": {},
        "name": "Boring Flow",
        "nodes": [
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
        ],
        "spec_version": "13.1",
        "uuid": "boring",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
]
`;

exports[`Flow Manipulation > on update canvas positions > should update positions 3`] = `
[
  {
    "payload": {
      "nodes": {
        "node0": {
          "inboundConnections": {},
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          "ui": {
            "position": {
              "left": 100,
              "top": 100,
            },
          },
        },
        "node1": {
          "inboundConnections": {
            "node0_exit0": "node0",
          },
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          "ui": {
            "position": {
              "left": 200,
              "top": 200,
            },
            "type": "wait_for_response",
          },
        },
        "node2": {
          "inboundConnections": {
            "node1_exit0": "node1",
            "node1_exit1": "node1",
            "node1_exit2": "node1",
          },
          "node": {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          "ui": {
            "position": {
              "bottom": 498,
              "left": 0,
              "right": 220,
              "top": 400,
            },
          },
        },
        "node3": {
          "inboundConnections": {
            "node2_exit0": "node2",
          },
          "node": {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
          "ui": {
            "position": {
              "bottom": 598,
              "left": 0,
              "right": 220,
              "top": 520,
            },
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [],
          "nodes": {
            "node0": {
              "position": {
                "bottom": 254,
                "left": 0,
                "right": 220,
                "top": 10,
              },
            },
            "node1": {
              "position": {
                "bottom": 370,
                "left": 0,
                "right": 220,
                "top": 280,
              },
              "type": "wait_for_response",
            },
            "node2": {
              "position": {
                "bottom": 498,
                "left": 0,
                "right": 220,
                "top": 400,
              },
            },
            "node3": {
              "position": {
                "bottom": 598,
                "left": 0,
                "right": 220,
                "top": 520,
              },
            },
          },
          "stickies": {
            "sticky0": {
              "body": "The body for sticky0",
              "position": {
                "bottom": NaN,
                "left": 300,
                "right": NaN,
                "top": 300,
              },
              "title": "sticky0",
            },
          },
        },
        "language": "eng",
        "localization": {},
        "name": "Boring Flow",
        "nodes": [
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
        ],
        "spec_version": "13.1",
        "uuid": "boring",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
]
`;

exports[`Flow Manipulation > remove nodes > should return correct nodes 1`] = `
[
  {
    "payload": {
      "nodes": {
        "node2": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          "ui": {
            "position": {
              "bottom": 498,
              "left": 0,
              "right": 220,
              "top": 400,
            },
          },
        },
        "node3": {
          "inboundConnections": {
            "node2_exit0": "node2",
          },
          "node": {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
          "ui": {
            "position": {
              "bottom": 598,
              "left": 0,
              "right": 220,
              "top": 520,
            },
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
]
`;

exports[`Flow Manipulation > remove nodes > should return correct nodes 2`] = `
[
  {
    "payload": {
      "nodes": {
        "node2": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          "ui": {
            "position": {
              "bottom": 498,
              "left": 0,
              "right": 220,
              "top": 400,
            },
          },
        },
        "node3": {
          "inboundConnections": {
            "node2_exit0": "node2",
          },
          "node": {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
          "ui": {
            "position": {
              "bottom": 598,
              "left": 0,
              "right": 220,
              "top": 520,
            },
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "nodes": {
        "node1": {
          "inboundConnections": {},
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          "ui": {
            "position": {
              "bottom": 370,
              "left": 0,
              "right": 220,
              "top": 280,
            },
            "type": "wait_for_response",
          },
        },
        "node2": {
          "inboundConnections": {
            "node1_exit0": "node1",
            "node1_exit1": "node1",
            "node1_exit2": "node1",
          },
          "node": {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          "ui": {
            "position": {
              "bottom": 498,
              "left": 0,
              "right": 220,
              "top": 400,
            },
          },
        },
        "node3": {
          "inboundConnections": {
            "node2_exit0": "node2",
          },
          "node": {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
          "ui": {
            "position": {
              "bottom": 598,
              "left": 0,
              "right": 220,
              "top": 520,
            },
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [],
          "nodes": {
            "node0": {
              "position": {
                "bottom": 254,
                "left": 0,
                "right": 220,
                "top": 10,
              },
            },
            "node1": {
              "position": {
                "bottom": 370,
                "left": 0,
                "right": 220,
                "top": 280,
              },
              "type": "wait_for_response",
            },
            "node2": {
              "position": {
                "bottom": 498,
                "left": 0,
                "right": 220,
                "top": 400,
              },
            },
            "node3": {
              "position": {
                "bottom": 598,
                "left": 0,
                "right": 220,
                "top": 520,
              },
            },
          },
          "stickies": {},
        },
        "language": "eng",
        "localization": {},
        "name": "Boring Flow",
        "nodes": [
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
        ],
        "spec_version": "13.1",
        "uuid": "boring",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
]
`;

exports[`Flow Manipulation > remove nodes > should return correct nodes 3`] = `
[
  {
    "payload": {
      "nodes": {
        "node2": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          "ui": {
            "position": {
              "bottom": 498,
              "left": 0,
              "right": 220,
              "top": 400,
            },
          },
        },
        "node3": {
          "inboundConnections": {
            "node2_exit0": "node2",
          },
          "node": {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
          "ui": {
            "position": {
              "bottom": 598,
              "left": 0,
              "right": 220,
              "top": 520,
            },
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "nodes": {
        "node1": {
          "inboundConnections": {},
          "node": {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          "ui": {
            "position": {
              "bottom": 370,
              "left": 0,
              "right": 220,
              "top": 280,
            },
            "type": "wait_for_response",
          },
        },
        "node2": {
          "inboundConnections": {
            "node1_exit0": "node1",
            "node1_exit1": "node1",
            "node1_exit2": "node1",
          },
          "node": {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          "ui": {
            "position": {
              "bottom": 498,
              "left": 0,
              "right": 220,
              "top": 400,
            },
          },
        },
        "node3": {
          "inboundConnections": {
            "node2_exit0": "node2",
          },
          "node": {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
          "ui": {
            "position": {
              "bottom": 598,
              "left": 0,
              "right": 220,
              "top": 520,
            },
          },
        },
      },
    },
    "type": "UPDATE_NODES",
  },
  {
    "payload": {
      "definition": {
        "_ui": {
          "languages": [],
          "nodes": {
            "node0": {
              "position": {
                "bottom": 254,
                "left": 0,
                "right": 220,
                "top": 10,
              },
            },
            "node1": {
              "position": {
                "bottom": 370,
                "left": 0,
                "right": 220,
                "top": 280,
              },
              "type": "wait_for_response",
            },
            "node2": {
              "position": {
                "bottom": 498,
                "left": 0,
                "right": 220,
                "top": 400,
              },
            },
            "node3": {
              "position": {
                "bottom": 598,
                "left": 0,
                "right": 220,
                "top": 520,
              },
            },
          },
          "stickies": {},
        },
        "language": "eng",
        "localization": {},
        "name": "Boring Flow",
        "nodes": [
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node1",
                "name": null,
                "uuid": "node0_exit0",
              },
            ],
            "uuid": "node0",
          },
          {
            "actions": [],
            "exits": [
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit0",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit1",
              },
              {
                "destination_uuid": "node2",
                "uuid": "node1_exit2",
              },
            ],
            "router": {
              "cases": [
                {
                  "arguments": [
                    "red",
                  ],
                  "category_uuid": "node1_cat0",
                  "type": "has_any_word",
                  "uuid": "node1_case0",
                },
                {
                  "arguments": [
                    "green",
                  ],
                  "category_uuid": "node1_cat1",
                  "type": "has_any_word",
                  "uuid": "node1_case1",
                },
              ],
              "categories": [
                {
                  "exit_uuid": "node1_exit0",
                  "name": "Red",
                  "uuid": "node1_cat0",
                },
                {
                  "exit_uuid": "node1_exit1",
                  "name": "Green",
                  "uuid": "node1_cat1",
                },
                {
                  "exit_uuid": "node1_exit2",
                  "name": "Other",
                  "uuid": "node1_cat2",
                },
              ],
              "default_exit_uuid": "node1_exit2",
              "operand": "@run.input",
              "result_name": "color",
              "type": "switch",
              "wait": {
                "type": "msg",
              },
            },
            "uuid": "node1",
          },
          {
            "actions": [
              {
                "text": "This has been really great.",
                "type": "send_msg",
                "uuid": "node2_action0",
              },
              {
                "field": {
                  "key": "unknown_field",
                  "name": "Unknown Field",
                },
                "type": "set_contact_field",
                "uuid": "node2_action1",
                "value": "Some Value",
              },
            ],
            "exits": [
              {
                "destination_uuid": "node3",
                "name": null,
                "uuid": "node2_exit0",
              },
            ],
            "uuid": "node2",
          },
          {
            "actions": [
              {
                "text": "Thanks for playing!",
                "type": "send_msg",
                "uuid": "node3_action0",
              },
            ],
            "exits": [
              {
                "destination_uuid": null,
                "name": null,
                "uuid": "node3_exit0",
              },
            ],
            "uuid": "node3",
          },
        ],
        "spec_version": "13.1",
        "uuid": "boring",
      },
    },
    "type": "UPDATE_DEFINITION",
  },
]
`;

exports[`Flow Manipulation > routers > should add random routers after an add action 1`] = `
{
  "inboundConnections": {},
  "node": {
    "actions": [],
    "exits": [
      {
        "destination_uuid": "132de855-4042-4dc1-a18f-cc2e6a8f790a",
        "name": null,
        "uuid": "node0_exit0",
      },
    ],
    "uuid": "node0",
  },
  "ui": {
    "position": {
      "bottom": 254,
      "left": 0,
      "right": 220,
      "top": 10,
    },
  },
}
`;

exports[`Flow Manipulation > routers > should add random routers after an add action 2`] = `
{
  "inboundConnections": {
    "node0_exit0": "node0",
  },
  "node": {
    "actions": [],
    "exits": [
      {
        "destination_uuid": null,
        "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
      },
      {
        "destination_uuid": null,
        "uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
      },
    ],
    "router": {
      "categories": [
        {
          "exit_uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
          "name": "Bucket 1",
          "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
        },
        {
          "exit_uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
          "name": "Bucket 2",
          "uuid": "477ac8b4-25e2-483a-8686-2d1332c4da1c",
        },
      ],
      "type": "random",
    },
    "uuid": "132de855-4042-4dc1-a18f-cc2e6a8f790a",
  },
  "ui": {
    "position": {
      "bottom": 254,
      "left": 0,
      "right": 220,
      "top": 10,
    },
    "type": "split_by_random",
  },
}
`;

exports[`Language > should handle language changes 1`] = `
[
  {
    "payload": {
      "editorState": {
        "language": {
          "id": "eng",
          "name": "English",
          "type": "language",
        },
        "translating": true,
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "language": {
          "id": "spa",
          "name": "Spanish",
          "type": "language",
        },
        "translating": false,
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;

exports[`Language > should handle language changes 2`] = `
[
  {
    "payload": {
      "editorState": {
        "language": {
          "id": "eng",
          "name": "English",
          "type": "language",
        },
        "translating": true,
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "language": {
          "id": "spa",
          "name": "Spanish",
          "type": "language",
        },
        "translating": false,
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
  {
    "payload": {
      "editorState": {
        "language": {
          "id": "eng",
          "name": "English",
          "type": "language",
        },
        "translating": false,
      },
    },
    "type": "UPDATE_EDITOR_STATE",
  },
]
`;
