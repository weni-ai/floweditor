// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`SendMsgForm > render > should render 1`] = `
<Dialog
  buttons={
    {
      "primary": {
        "name": "Confirm",
        "onClick": [Function],
      },
      "tertiary": {
        "name": "Cancel",
        "onClick": [Function],
      },
    }
  }
  headerClass="send_msg"
  tabs={
    [
      {
        "body": <React.Fragment>
          <p>
            Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.
          </p>
          <AssetSelector
            entry={
              {
                "value": null,
              }
            }
            formClearable={true}
            name="template"
            noOptionsMessage="No templates found"
            onChange={[Function]}
            searchable={true}
            shouldExclude={[Function]}
          />
        </React.Fragment>,
        "checked": false,
        "hasErrors": false,
        "name": "WhatsApp",
      },
      {
        "body": <React.Fragment>
          <div
            className="_quick_reply_summary_cc747c u font secondary body-md color-neutral-cloudy"
          >
            Quick Replies are made into buttons for supported channels. For example, when asking a question, you might add a Quick Reply for "Yes" and one for "No".
            <br />
            <br />
            You can add up to 10 Quick Replies.
          </div>
          <MultiChoiceInput
            entry={
              {
                "value": "",
              }
            }
            helpText={
              <Trans
                i18nKey="forms.quick_replies"
              />
            }
            items={
              {
                "value": [],
              }
            }
            name="Add a new Quick reply and press Enter"
            onChange={[Function]}
          />
        </React.Fragment>,
        "checked": false,
        "hasErrors": false,
        "name": "Quick Replies",
      },
      {
        "body": <React.Fragment>
          <div
            className="u font secondary body-md color-neutral-cloudy"
          >
            Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.
          </div>
          <div
            className="_url_attachment_container_0ed93f"
          >
            <div
              className="_label_0ed93f u font secondary body-md color-neutral-cloudy"
            >
              File
               
              1
            </div>
            <div
              className="_url_attachment_0ed93f"
            >
              <div
                className="_type_choice_0ed93f"
              >
                <SelectElement
                  entry={
                    {
                      "value": null,
                    }
                  }
                  name="Type Options"
                  onChange={[Function]}
                  options={
                    [
                      {
                        "name": "Image URL",
                        "value": "image",
                      },
                      {
                        "name": "Audio URL",
                        "value": "audio",
                      },
                      {
                        "name": "Video URL",
                        "value": "video",
                      },
                      {
                        "name": "PDF Document URL",
                        "value": "application",
                      },
                      {
                        "name": "Upload Attachment",
                        "value": "upload",
                      },
                    ]
                  }
                  placeholder="Select the file type"
                  style="sm"
                />
              </div>
              <React.Fragment>
                <div
                  className="_url_0ed93f"
                />
                <div
                  className="_remove_0ed93f"
                />
              </React.Fragment>
            </div>
          </div>
          <input
            onChange={[Function]}
            style={
              {
                "display": "none",
              }
            }
            type="file"
          />
        </React.Fragment>,
        "checked": false,
        "name": "Attachments",
      },
      {
        "body": <React.Fragment>
          <div
            className="u font secondary body-md color-neutral-cloudy _title_cc747c"
          >
            Send a message to all destinations known for this contact.
          </div>
          <SwitchElement
            checked={false}
            description="If you aren't sure what this means, leave it unchecked."
            name="Send a message to all destinations"
            onChange={[Function]}
            size="small"
            title="Send a message to all destinations"
          />
        </React.Fragment>,
        "checked": false,
        "name": "Advanced",
      },
    ]
  }
  title="Send message"
>
  <TypeList
    __className=""
    initialType={
      {
        "component": [Function],
        "description": "Send the contact a message",
        "form": [Function],
        "localization": [Function],
        "localizeableKeys": [
          "text",
          "quick_replies",
          "templating.variables",
        ],
        "massageForDisplay": [Function],
        "name": "Send message",
        "type": "send_msg",
      }
    }
    nodeSettings={
      {
        "originalAction": {
          "all_urns": false,
          "attachments": [],
          "quick_replies": [],
          "templating": null,
          "text": "Hey!",
          "type": "send_msg",
          "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
        },
        "originalNode": {
          "inboundConnections": {},
          "node": {
            "actions": [
              {
                "all_urns": false,
                "attachments": [],
                "quick_replies": [],
                "templating": null,
                "text": "Hey!",
                "type": "send_msg",
                "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
              },
            ],
            "exits": [
              {
                "uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
              },
            ],
            "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
          },
          "ui": {
            "position": {
              "left": 0,
              "top": 0,
            },
            "type": "execute_actions",
          },
        },
      }
    }
    onChange={[MockFunction spy]}
  />
  <TextInputElement
    autocomplete={true}
    counter="sms"
    entry={
      {
        "value": "Hey!",
      }
    }
    focus={true}
    name="Message"
    onChange={[Function]}
    placeholder="Type here..."
    showLabel={true}
    textarea={true}
  />
</Dialog>
`;

exports[`SendMsgForm > updates > should allow switching from router 1`] = `
[MockFunction spy] {
  "calls": [
    [
      {
        "all_urns": false,
        "attachments": [],
        "quick_replies": [],
        "text": "What is your favorite color?",
        "type": "send_msg",
        "uuid": "70ac6ea6-803a-4c33-81c7-dc26803c313f",
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`SendMsgForm > updates > should save changes 1`] = `
{
  "attachments": [],
  "commentId": {
    "value": "",
  },
  "instagramResponseType": {
    "value": null,
  },
  "message": {
    "validationFailures": [],
    "value": "What is your favorite color?",
  },
  "postId": {
    "value": "",
  },
  "quickReplies": {
    "validationFailures": [],
    "value": [
      "red",
      "green",
      "blue",
    ],
  },
  "quickReplyEntry": {
    "value": "",
  },
  "sendAll": true,
  "tagSelection": {
    "value": null,
  },
  "template": {
    "value": null,
  },
  "templateVariables": [],
  "topic": {
    "value": undefined,
  },
  "valid": true,
}
`;

exports[`SendMsgForm > updates > should save changes 2`] = `
[MockFunction spy] {
  "calls": [
    [
      {
        "all_urns": true,
        "attachments": [],
        "quick_replies": [
          "red",
          "green",
          "blue",
        ],
        "text": "What is your favorite color?",
        "type": "send_msg",
        "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
